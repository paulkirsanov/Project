Component: ARM Compiler 5.06 update 6 (build 750) Tool: armlink [4d35ed]

==============================================================================

Section Cross References

    main.o(i.Sender) refers to queue.o(i.xQueueGenericSend) for xQueueGenericSend
    main.o(i.Sender) refers to usart.o(i.usart_send_string) for usart_send_string
    main.o(i.Sender) refers to tasks.o(i.vTaskDelay) for vTaskDelay
    main.o(i.Sender) refers to tasks.o(i.vTaskDelete) for vTaskDelete
    main.o(i.Sender) refers to main.o(.data) for qMotor1
    main.o(i.Sender_1) refers to queue.o(i.xQueueGenericCreate) for xQueueGenericCreate
    main.o(i.Sender_1) refers to queue.o(i.xQueueGenericReceive) for xQueueGenericReceive
    main.o(i.Sender_1) refers to queue.o(i.xQueueGenericSend) for xQueueGenericSend
    main.o(i.Sender_1) refers to usart.o(i.usart_send_string) for usart_send_string
    main.o(i.Sender_1) refers to main.o(.data) for ISRFromUSARTHandle
    main.o(i.Sender_1) refers to main.o(.bss) for buffer_rx
    main.o(i.USART1_IRQHandler) refers to queue.o(i.xQueueGiveFromISR) for xQueueGiveFromISR
    main.o(i.USART1_IRQHandler) refers to main.o(.data) for xHigherPriorityTaskWoken
    main.o(i.USART1_IRQHandler) refers to main.o(.bss) for buffer_rx
    main.o(i.main) refers to main.o(i.rcc_init) for rcc_init
    main.o(i.main) refers to usart.o(i.usart1_init) for usart1_init
    main.o(i.main) refers to led.o(i.led_init) for led_init
    main.o(i.main) refers to io.o(i.IO_Init) for IO_Init
    main.o(i.main) refers to stepmotor.o(i.Stepper_Init) for Stepper_Init
    main.o(i.main) refers to tasks.o(i.xTaskCreate) for xTaskCreate
    main.o(i.main) refers to tasks.o(i.vTaskStartScheduler) for vTaskStartScheduler
    main.o(i.main) refers to main.o(i.vBlinker) for vBlinker
    main.o(i.main) refers to main.o(i.Sender_1) for Sender_1
    main.o(i.vBlinker) refers to tasks.o(i.vTaskDelay) for vTaskDelay
    usart.o(i.usart1_init) refers to usart.o(i.NVIC_EnableIRQ) for NVIC_EnableIRQ
    usart.o(i.usart2_init) refers to usart.o(i.NVIC_EnableIRQ) for NVIC_EnableIRQ
    usart.o(i.usartSendArrar) refers to strlen.o(.text) for strlen
    usart.o(i.usartSendArrar) refers to usart.o(i.usart_send_data) for usart_send_data
    usart.o(i.usart_send_string) refers to usart.o(i.usart_send_data) for usart_send_data
    stepmotor.o(i.Stepper_Init) refers to tasks.o(i.xTaskCreate) for xTaskCreate
    stepmotor.o(i.Stepper_Init) refers to queue.o(i.xQueueGenericCreate) for xQueueGenericCreate
    stepmotor.o(i.Stepper_Init) refers to stepmotor.o(i.st_vMotor1) for st_vMotor1
    stepmotor.o(i.Stepper_Init) refers to main.o(.data) for qMotor1
    stepmotor.o(i.Stepper_Init) refers to stepmotor.o(i.st_vMotor2) for st_vMotor2
    stepmotor.o(i.set_resolution) refers to io.o(i.IO_SetLine) for IO_SetLine
    stepmotor.o(i.set_resolution) refers to stepmotor.o(.data) for Motor
    stepmotor.o(i.st_Rotate) refers to io.o(i.IO_SetLine) for IO_SetLine
    stepmotor.o(i.st_Rotate) refers to stepmotor.o(i.set_resolution) for set_resolution
    stepmotor.o(i.st_Rotate) refers to stepmotor.o(i.st_Step) for st_Step
    stepmotor.o(i.st_Rotate) refers to tasks.o(i.vTaskDelay) for vTaskDelay
    stepmotor.o(i.st_Rotate) refers to stepmotor.o(.data) for Motor
    stepmotor.o(i.st_Step) refers to io.o(i.IO_SetLine) for IO_SetLine
    stepmotor.o(i.st_Step) refers to stepmotor.o(.data) for Motor
    stepmotor.o(i.st_vMotor1) refers to queue.o(i.xQueueGenericReceive) for xQueueGenericReceive
    stepmotor.o(i.st_vMotor1) refers to stepmotor.o(i.st_Rotate) for st_Rotate
    stepmotor.o(i.st_vMotor1) refers to queue.o(i.xQueueGenericSend) for xQueueGenericSend
    stepmotor.o(i.st_vMotor1) refers to main.o(.data) for qMotor1
    stepmotor.o(i.st_vMotor2) refers to queue.o(i.xQueueGenericReceive) for xQueueGenericReceive
    stepmotor.o(i.st_vMotor2) refers to stepmotor.o(i.st_Rotate) for st_Rotate
    stepmotor.o(i.st_vMotor2) refers to queue.o(i.xQueueGenericSend) for xQueueGenericSend
    stepmotor.o(i.st_vMotor2) refers to main.o(.data) for qMotor2
    io.o(i.IO_ConfigLine) refers to io.o(.constdata) for IOs
    io.o(i.IO_Init) refers to io.o(i.IO_ConfigLine) for IO_ConfigLine
    io.o(i.IO_Init) refers to io.o(.constdata) for IOs
    io.o(i.IO_SetLine) refers to io.o(.constdata) for IOs
    system_stm32f10x.o(i.SetSysClock) refers to system_stm32f10x.o(i.SetSysClockTo72) for SetSysClockTo72
    system_stm32f10x.o(i.SystemCoreClockUpdate) refers to system_stm32f10x.o(.data) for SystemCoreClock
    system_stm32f10x.o(i.SystemInit) refers to system_stm32f10x.o(i.SetSysClock) for SetSysClock
    startup_stm32f10x_md.o(STACK) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_stm32f10x_md.o(HEAP) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_stm32f10x_md.o(RESET) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_stm32f10x_md.o(RESET) refers to startup_stm32f10x_md.o(STACK) for __initial_sp
    startup_stm32f10x_md.o(RESET) refers to startup_stm32f10x_md.o(.text) for Reset_Handler
    startup_stm32f10x_md.o(RESET) refers to port.o(.emb_text) for SVC_Handler
    startup_stm32f10x_md.o(RESET) refers to port.o(i.SysTick_Handler) for SysTick_Handler
    startup_stm32f10x_md.o(RESET) refers to main.o(i.USART1_IRQHandler) for USART1_IRQHandler
    startup_stm32f10x_md.o(.text) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_stm32f10x_md.o(.text) refers to system_stm32f10x.o(i.SystemInit) for SystemInit
    startup_stm32f10x_md.o(.text) refers to __main.o(!!!main) for __main
    startup_stm32f10x_md.o(.text) refers to startup_stm32f10x_md.o(HEAP) for Heap_Mem
    startup_stm32f10x_md.o(.text) refers to startup_stm32f10x_md.o(STACK) for Stack_Mem
    event_groups.o(i.vEventGroupClearBitsCallback) refers to event_groups.o(i.xEventGroupClearBits) for xEventGroupClearBits
    event_groups.o(i.vEventGroupDelete) refers to tasks.o(i.vTaskSuspendAll) for vTaskSuspendAll
    event_groups.o(i.vEventGroupDelete) refers to tasks.o(i.xTaskRemoveFromUnorderedEventList) for xTaskRemoveFromUnorderedEventList
    event_groups.o(i.vEventGroupDelete) refers to heap_1.o(i.vPortFree) for vPortFree
    event_groups.o(i.vEventGroupDelete) refers to tasks.o(i.xTaskResumeAll) for xTaskResumeAll
    event_groups.o(i.vEventGroupSetBitsCallback) refers to event_groups.o(i.xEventGroupSetBits) for xEventGroupSetBits
    event_groups.o(i.xEventGroupClearBits) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    event_groups.o(i.xEventGroupClearBits) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    event_groups.o(i.xEventGroupCreate) refers to heap_1.o(i.pvPortMalloc) for pvPortMalloc
    event_groups.o(i.xEventGroupCreate) refers to list.o(i.vListInitialise) for vListInitialise
    event_groups.o(i.xEventGroupSetBits) refers to tasks.o(i.vTaskSuspendAll) for vTaskSuspendAll
    event_groups.o(i.xEventGroupSetBits) refers to tasks.o(i.xTaskRemoveFromUnorderedEventList) for xTaskRemoveFromUnorderedEventList
    event_groups.o(i.xEventGroupSetBits) refers to tasks.o(i.xTaskResumeAll) for xTaskResumeAll
    event_groups.o(i.xEventGroupSync) refers to tasks.o(i.vTaskSuspendAll) for vTaskSuspendAll
    event_groups.o(i.xEventGroupSync) refers to event_groups.o(i.xEventGroupSetBits) for xEventGroupSetBits
    event_groups.o(i.xEventGroupSync) refers to tasks.o(i.vTaskPlaceOnUnorderedEventList) for vTaskPlaceOnUnorderedEventList
    event_groups.o(i.xEventGroupSync) refers to tasks.o(i.xTaskResumeAll) for xTaskResumeAll
    event_groups.o(i.xEventGroupSync) refers to tasks.o(i.uxTaskResetEventItemValue) for uxTaskResetEventItemValue
    event_groups.o(i.xEventGroupSync) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    event_groups.o(i.xEventGroupSync) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    event_groups.o(i.xEventGroupWaitBits) refers to tasks.o(i.vTaskSuspendAll) for vTaskSuspendAll
    event_groups.o(i.xEventGroupWaitBits) refers to event_groups.o(i.prvTestWaitCondition) for prvTestWaitCondition
    event_groups.o(i.xEventGroupWaitBits) refers to tasks.o(i.vTaskPlaceOnUnorderedEventList) for vTaskPlaceOnUnorderedEventList
    event_groups.o(i.xEventGroupWaitBits) refers to tasks.o(i.xTaskResumeAll) for xTaskResumeAll
    event_groups.o(i.xEventGroupWaitBits) refers to tasks.o(i.uxTaskResetEventItemValue) for uxTaskResetEventItemValue
    event_groups.o(i.xEventGroupWaitBits) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    event_groups.o(i.xEventGroupWaitBits) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    heap_1.o(i.pvPortMalloc) refers to tasks.o(i.vTaskSuspendAll) for vTaskSuspendAll
    heap_1.o(i.pvPortMalloc) refers to tasks.o(i.xTaskResumeAll) for xTaskResumeAll
    heap_1.o(i.pvPortMalloc) refers to heap_1.o(.data) for pucAlignedHeap
    heap_1.o(i.pvPortMalloc) refers to heap_1.o(.bss) for ucHeap
    heap_1.o(i.vPortInitialiseBlocks) refers to heap_1.o(.data) for xNextFreeByte
    heap_1.o(i.xPortGetFreeHeapSize) refers to heap_1.o(.data) for xNextFreeByte
    port.o(.emb_text) refers to tasks.o(i.vTaskSwitchContext) for vTaskSwitchContext
    port.o(.emb_text) refers to tasks.o(.data) for pxCurrentTCB
    port.o(i.SysTick_Handler) refers to tasks.o(i.xTaskIncrementTick) for xTaskIncrementTick
    port.o(i.pxPortInitialiseStack) refers to port.o(i.prvTaskExitError) for prvTaskExitError
    port.o(i.vPortEnterCritical) refers to port.o(.data) for uxCriticalNesting
    port.o(i.vPortExitCritical) refers to port.o(.data) for uxCriticalNesting
    port.o(i.xPortStartScheduler) refers to port.o(i.vPortSetupTimerInterrupt) for vPortSetupTimerInterrupt
    port.o(i.xPortStartScheduler) refers to port.o(.emb_text) for __asm___6_port_c_39a90d8d__prvStartFirstTask
    port.o(i.xPortStartScheduler) refers to port.o(.data) for uxCriticalNesting
    queue.o(i.prvCopyDataFromQueue) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    queue.o(i.prvCopyDataToQueue) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    queue.o(i.prvInitialiseNewQueue) refers to queue.o(i.xQueueGenericReset) for xQueueGenericReset
    queue.o(i.prvIsQueueEmpty) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    queue.o(i.prvIsQueueEmpty) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    queue.o(i.prvIsQueueFull) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    queue.o(i.prvIsQueueFull) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    queue.o(i.prvUnlockQueue) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    queue.o(i.prvUnlockQueue) refers to tasks.o(i.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(i.prvUnlockQueue) refers to tasks.o(i.vTaskMissedYield) for vTaskMissedYield
    queue.o(i.prvUnlockQueue) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    queue.o(i.uxQueueMessagesWaiting) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    queue.o(i.uxQueueMessagesWaiting) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    queue.o(i.uxQueueSpacesAvailable) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    queue.o(i.uxQueueSpacesAvailable) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    queue.o(i.vQueueDelete) refers to heap_1.o(i.vPortFree) for vPortFree
    queue.o(i.xQueueGenericCreate) refers to heap_1.o(i.pvPortMalloc) for pvPortMalloc
    queue.o(i.xQueueGenericCreate) refers to queue.o(i.prvInitialiseNewQueue) for prvInitialiseNewQueue
    queue.o(i.xQueueGenericReceive) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    queue.o(i.xQueueGenericReceive) refers to queue.o(i.prvCopyDataFromQueue) for prvCopyDataFromQueue
    queue.o(i.xQueueGenericReceive) refers to tasks.o(i.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(i.xQueueGenericReceive) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    queue.o(i.xQueueGenericReceive) refers to tasks.o(i.vTaskSetTimeOutState) for vTaskSetTimeOutState
    queue.o(i.xQueueGenericReceive) refers to tasks.o(i.vTaskSuspendAll) for vTaskSuspendAll
    queue.o(i.xQueueGenericReceive) refers to tasks.o(i.xTaskCheckForTimeOut) for xTaskCheckForTimeOut
    queue.o(i.xQueueGenericReceive) refers to queue.o(i.prvIsQueueEmpty) for prvIsQueueEmpty
    queue.o(i.xQueueGenericReceive) refers to tasks.o(i.vTaskPlaceOnEventList) for vTaskPlaceOnEventList
    queue.o(i.xQueueGenericReceive) refers to queue.o(i.prvUnlockQueue) for prvUnlockQueue
    queue.o(i.xQueueGenericReceive) refers to tasks.o(i.xTaskResumeAll) for xTaskResumeAll
    queue.o(i.xQueueGenericReset) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    queue.o(i.xQueueGenericReset) refers to tasks.o(i.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(i.xQueueGenericReset) refers to list.o(i.vListInitialise) for vListInitialise
    queue.o(i.xQueueGenericReset) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    queue.o(i.xQueueGenericSend) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    queue.o(i.xQueueGenericSend) refers to queue.o(i.prvCopyDataToQueue) for prvCopyDataToQueue
    queue.o(i.xQueueGenericSend) refers to tasks.o(i.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(i.xQueueGenericSend) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    queue.o(i.xQueueGenericSend) refers to tasks.o(i.vTaskSetTimeOutState) for vTaskSetTimeOutState
    queue.o(i.xQueueGenericSend) refers to tasks.o(i.vTaskSuspendAll) for vTaskSuspendAll
    queue.o(i.xQueueGenericSend) refers to tasks.o(i.xTaskCheckForTimeOut) for xTaskCheckForTimeOut
    queue.o(i.xQueueGenericSend) refers to queue.o(i.prvIsQueueFull) for prvIsQueueFull
    queue.o(i.xQueueGenericSend) refers to tasks.o(i.vTaskPlaceOnEventList) for vTaskPlaceOnEventList
    queue.o(i.xQueueGenericSend) refers to queue.o(i.prvUnlockQueue) for prvUnlockQueue
    queue.o(i.xQueueGenericSend) refers to tasks.o(i.xTaskResumeAll) for xTaskResumeAll
    queue.o(i.xQueueGenericSendFromISR) refers to queue.o(i.prvCopyDataToQueue) for prvCopyDataToQueue
    queue.o(i.xQueueGenericSendFromISR) refers to tasks.o(i.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(i.xQueueGiveFromISR) refers to tasks.o(i.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(i.xQueuePeekFromISR) refers to queue.o(i.prvCopyDataFromQueue) for prvCopyDataFromQueue
    queue.o(i.xQueueReceiveFromISR) refers to queue.o(i.prvCopyDataFromQueue) for prvCopyDataFromQueue
    queue.o(i.xQueueReceiveFromISR) refers to tasks.o(i.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    tasks.o(i.pcTaskGetName) refers to tasks.o(.data) for pxCurrentTCB
    tasks.o(i.prvAddCurrentTaskToDelayedList) refers to list.o(i.uxListRemove) for uxListRemove
    tasks.o(i.prvAddCurrentTaskToDelayedList) refers to list.o(i.vListInsertEnd) for vListInsertEnd
    tasks.o(i.prvAddCurrentTaskToDelayedList) refers to list.o(i.vListInsert) for vListInsert
    tasks.o(i.prvAddCurrentTaskToDelayedList) refers to tasks.o(.data) for xTickCount
    tasks.o(i.prvAddCurrentTaskToDelayedList) refers to tasks.o(.bss) for xSuspendedTaskList
    tasks.o(i.prvAddNewTaskToReadyList) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    tasks.o(i.prvAddNewTaskToReadyList) refers to tasks.o(i.prvInitialiseTaskLists) for prvInitialiseTaskLists
    tasks.o(i.prvAddNewTaskToReadyList) refers to list.o(i.vListInsertEnd) for vListInsertEnd
    tasks.o(i.prvAddNewTaskToReadyList) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    tasks.o(i.prvAddNewTaskToReadyList) refers to tasks.o(.data) for uxCurrentNumberOfTasks
    tasks.o(i.prvAddNewTaskToReadyList) refers to tasks.o(.bss) for pxReadyTasksLists
    tasks.o(i.prvCheckTasksWaitingTermination) refers to tasks.o(i.vTaskSuspendAll) for vTaskSuspendAll
    tasks.o(i.prvCheckTasksWaitingTermination) refers to tasks.o(i.xTaskResumeAll) for xTaskResumeAll
    tasks.o(i.prvCheckTasksWaitingTermination) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    tasks.o(i.prvCheckTasksWaitingTermination) refers to list.o(i.uxListRemove) for uxListRemove
    tasks.o(i.prvCheckTasksWaitingTermination) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    tasks.o(i.prvCheckTasksWaitingTermination) refers to tasks.o(i.prvDeleteTCB) for prvDeleteTCB
    tasks.o(i.prvCheckTasksWaitingTermination) refers to tasks.o(.bss) for xTasksWaitingTermination
    tasks.o(i.prvCheckTasksWaitingTermination) refers to tasks.o(.data) for uxCurrentNumberOfTasks
    tasks.o(i.prvDeleteTCB) refers to heap_1.o(i.vPortFree) for vPortFree
    tasks.o(i.prvIdleTask) refers to tasks.o(i.prvCheckTasksWaitingTermination) for prvCheckTasksWaitingTermination
    tasks.o(i.prvIdleTask) refers to tasks.o(.bss) for pxReadyTasksLists
    tasks.o(i.prvInitialiseNewTask) refers to list.o(i.vListInitialiseItem) for vListInitialiseItem
    tasks.o(i.prvInitialiseNewTask) refers to port.o(i.pxPortInitialiseStack) for pxPortInitialiseStack
    tasks.o(i.prvInitialiseTaskLists) refers to list.o(i.vListInitialise) for vListInitialise
    tasks.o(i.prvInitialiseTaskLists) refers to tasks.o(.bss) for pxReadyTasksLists
    tasks.o(i.prvInitialiseTaskLists) refers to tasks.o(.data) for pxDelayedTaskList
    tasks.o(i.prvResetNextTaskUnblockTime) refers to tasks.o(.data) for pxDelayedTaskList
    tasks.o(i.prvTaskIsTaskSuspended) refers to tasks.o(.bss) for xSuspendedTaskList
    tasks.o(i.ulTaskNotifyTake) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    tasks.o(i.ulTaskNotifyTake) refers to tasks.o(i.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(i.ulTaskNotifyTake) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    tasks.o(i.ulTaskNotifyTake) refers to tasks.o(.data) for pxCurrentTCB
    tasks.o(i.uxTaskGetNumberOfTasks) refers to tasks.o(.data) for uxCurrentNumberOfTasks
    tasks.o(i.uxTaskPriorityGet) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    tasks.o(i.uxTaskPriorityGet) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    tasks.o(i.uxTaskPriorityGet) refers to tasks.o(.data) for pxCurrentTCB
    tasks.o(i.uxTaskPriorityGetFromISR) refers to tasks.o(.data) for pxCurrentTCB
    tasks.o(i.uxTaskResetEventItemValue) refers to tasks.o(.data) for pxCurrentTCB
    tasks.o(i.vTaskDelay) refers to tasks.o(i.vTaskSuspendAll) for vTaskSuspendAll
    tasks.o(i.vTaskDelay) refers to tasks.o(i.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(i.vTaskDelay) refers to tasks.o(i.xTaskResumeAll) for xTaskResumeAll
    tasks.o(i.vTaskDelayUntil) refers to tasks.o(i.vTaskSuspendAll) for vTaskSuspendAll
    tasks.o(i.vTaskDelayUntil) refers to tasks.o(i.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(i.vTaskDelayUntil) refers to tasks.o(i.xTaskResumeAll) for xTaskResumeAll
    tasks.o(i.vTaskDelayUntil) refers to tasks.o(.data) for xTickCount
    tasks.o(i.vTaskDelete) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    tasks.o(i.vTaskDelete) refers to list.o(i.uxListRemove) for uxListRemove
    tasks.o(i.vTaskDelete) refers to list.o(i.vListInsertEnd) for vListInsertEnd
    tasks.o(i.vTaskDelete) refers to tasks.o(i.prvDeleteTCB) for prvDeleteTCB
    tasks.o(i.vTaskDelete) refers to tasks.o(i.prvResetNextTaskUnblockTime) for prvResetNextTaskUnblockTime
    tasks.o(i.vTaskDelete) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    tasks.o(i.vTaskDelete) refers to tasks.o(.data) for pxCurrentTCB
    tasks.o(i.vTaskDelete) refers to tasks.o(.bss) for pxReadyTasksLists
    tasks.o(i.vTaskEndScheduler) refers to port.o(i.vPortEndScheduler) for vPortEndScheduler
    tasks.o(i.vTaskEndScheduler) refers to tasks.o(.data) for xSchedulerRunning
    tasks.o(i.vTaskMissedYield) refers to tasks.o(.data) for xYieldPending
    tasks.o(i.vTaskNotifyGiveFromISR) refers to list.o(i.uxListRemove) for uxListRemove
    tasks.o(i.vTaskNotifyGiveFromISR) refers to list.o(i.vListInsertEnd) for vListInsertEnd
    tasks.o(i.vTaskNotifyGiveFromISR) refers to tasks.o(.data) for uxSchedulerSuspended
    tasks.o(i.vTaskNotifyGiveFromISR) refers to tasks.o(.bss) for pxReadyTasksLists
    tasks.o(i.vTaskPlaceOnEventList) refers to list.o(i.vListInsert) for vListInsert
    tasks.o(i.vTaskPlaceOnEventList) refers to tasks.o(i.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(i.vTaskPlaceOnEventList) refers to tasks.o(.data) for pxCurrentTCB
    tasks.o(i.vTaskPlaceOnUnorderedEventList) refers to list.o(i.vListInsertEnd) for vListInsertEnd
    tasks.o(i.vTaskPlaceOnUnorderedEventList) refers to tasks.o(i.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(i.vTaskPlaceOnUnorderedEventList) refers to tasks.o(.data) for pxCurrentTCB
    tasks.o(i.vTaskPrioritySet) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    tasks.o(i.vTaskPrioritySet) refers to list.o(i.uxListRemove) for uxListRemove
    tasks.o(i.vTaskPrioritySet) refers to list.o(i.vListInsertEnd) for vListInsertEnd
    tasks.o(i.vTaskPrioritySet) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    tasks.o(i.vTaskPrioritySet) refers to tasks.o(.data) for pxCurrentTCB
    tasks.o(i.vTaskPrioritySet) refers to tasks.o(.bss) for pxReadyTasksLists
    tasks.o(i.vTaskResume) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    tasks.o(i.vTaskResume) refers to tasks.o(i.prvTaskIsTaskSuspended) for prvTaskIsTaskSuspended
    tasks.o(i.vTaskResume) refers to list.o(i.uxListRemove) for uxListRemove
    tasks.o(i.vTaskResume) refers to list.o(i.vListInsertEnd) for vListInsertEnd
    tasks.o(i.vTaskResume) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    tasks.o(i.vTaskResume) refers to tasks.o(.data) for pxCurrentTCB
    tasks.o(i.vTaskResume) refers to tasks.o(.bss) for pxReadyTasksLists
    tasks.o(i.vTaskSetTimeOutState) refers to tasks.o(.data) for xNumOfOverflows
    tasks.o(i.vTaskStartScheduler) refers to tasks.o(i.xTaskCreate) for xTaskCreate
    tasks.o(i.vTaskStartScheduler) refers to port.o(i.xPortStartScheduler) for xPortStartScheduler
    tasks.o(i.vTaskStartScheduler) refers to tasks.o(.data) for xIdleTaskHandle
    tasks.o(i.vTaskStartScheduler) refers to tasks.o(i.prvIdleTask) for prvIdleTask
    tasks.o(i.vTaskSuspend) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    tasks.o(i.vTaskSuspend) refers to list.o(i.uxListRemove) for uxListRemove
    tasks.o(i.vTaskSuspend) refers to list.o(i.vListInsertEnd) for vListInsertEnd
    tasks.o(i.vTaskSuspend) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    tasks.o(i.vTaskSuspend) refers to tasks.o(i.prvResetNextTaskUnblockTime) for prvResetNextTaskUnblockTime
    tasks.o(i.vTaskSuspend) refers to tasks.o(i.vTaskSwitchContext) for vTaskSwitchContext
    tasks.o(i.vTaskSuspend) refers to tasks.o(.data) for pxCurrentTCB
    tasks.o(i.vTaskSuspend) refers to tasks.o(.bss) for pxReadyTasksLists
    tasks.o(i.vTaskSuspendAll) refers to tasks.o(.data) for uxSchedulerSuspended
    tasks.o(i.vTaskSwitchContext) refers to tasks.o(.data) for uxSchedulerSuspended
    tasks.o(i.vTaskSwitchContext) refers to tasks.o(.bss) for pxReadyTasksLists
    tasks.o(i.xTaskCheckForTimeOut) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    tasks.o(i.xTaskCheckForTimeOut) refers to tasks.o(i.vTaskSetTimeOutState) for vTaskSetTimeOutState
    tasks.o(i.xTaskCheckForTimeOut) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    tasks.o(i.xTaskCheckForTimeOut) refers to tasks.o(.data) for xTickCount
    tasks.o(i.xTaskCreate) refers to heap_1.o(i.pvPortMalloc) for pvPortMalloc
    tasks.o(i.xTaskCreate) refers to heap_1.o(i.vPortFree) for vPortFree
    tasks.o(i.xTaskCreate) refers to tasks.o(i.prvInitialiseNewTask) for prvInitialiseNewTask
    tasks.o(i.xTaskCreate) refers to tasks.o(i.prvAddNewTaskToReadyList) for prvAddNewTaskToReadyList
    tasks.o(i.xTaskGenericNotify) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    tasks.o(i.xTaskGenericNotify) refers to list.o(i.uxListRemove) for uxListRemove
    tasks.o(i.xTaskGenericNotify) refers to list.o(i.vListInsertEnd) for vListInsertEnd
    tasks.o(i.xTaskGenericNotify) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    tasks.o(i.xTaskGenericNotify) refers to tasks.o(.data) for uxTopReadyPriority
    tasks.o(i.xTaskGenericNotify) refers to tasks.o(.bss) for pxReadyTasksLists
    tasks.o(i.xTaskGenericNotifyFromISR) refers to list.o(i.uxListRemove) for uxListRemove
    tasks.o(i.xTaskGenericNotifyFromISR) refers to list.o(i.vListInsertEnd) for vListInsertEnd
    tasks.o(i.xTaskGenericNotifyFromISR) refers to tasks.o(.data) for uxSchedulerSuspended
    tasks.o(i.xTaskGenericNotifyFromISR) refers to tasks.o(.bss) for pxReadyTasksLists
    tasks.o(i.xTaskGetTickCount) refers to tasks.o(.data) for xTickCount
    tasks.o(i.xTaskGetTickCountFromISR) refers to tasks.o(.data) for xTickCount
    tasks.o(i.xTaskIncrementTick) refers to tasks.o(i.prvResetNextTaskUnblockTime) for prvResetNextTaskUnblockTime
    tasks.o(i.xTaskIncrementTick) refers to list.o(i.uxListRemove) for uxListRemove
    tasks.o(i.xTaskIncrementTick) refers to list.o(i.vListInsertEnd) for vListInsertEnd
    tasks.o(i.xTaskIncrementTick) refers to tasks.o(.data) for uxSchedulerSuspended
    tasks.o(i.xTaskIncrementTick) refers to tasks.o(.bss) for pxReadyTasksLists
    tasks.o(i.xTaskNotifyStateClear) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    tasks.o(i.xTaskNotifyStateClear) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    tasks.o(i.xTaskNotifyStateClear) refers to tasks.o(.data) for pxCurrentTCB
    tasks.o(i.xTaskNotifyWait) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    tasks.o(i.xTaskNotifyWait) refers to tasks.o(i.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(i.xTaskNotifyWait) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    tasks.o(i.xTaskNotifyWait) refers to tasks.o(.data) for pxCurrentTCB
    tasks.o(i.xTaskRemoveFromEventList) refers to list.o(i.uxListRemove) for uxListRemove
    tasks.o(i.xTaskRemoveFromEventList) refers to list.o(i.vListInsertEnd) for vListInsertEnd
    tasks.o(i.xTaskRemoveFromEventList) refers to tasks.o(.data) for uxSchedulerSuspended
    tasks.o(i.xTaskRemoveFromEventList) refers to tasks.o(.bss) for pxReadyTasksLists
    tasks.o(i.xTaskRemoveFromUnorderedEventList) refers to list.o(i.uxListRemove) for uxListRemove
    tasks.o(i.xTaskRemoveFromUnorderedEventList) refers to list.o(i.vListInsertEnd) for vListInsertEnd
    tasks.o(i.xTaskRemoveFromUnorderedEventList) refers to tasks.o(.data) for uxTopReadyPriority
    tasks.o(i.xTaskRemoveFromUnorderedEventList) refers to tasks.o(.bss) for pxReadyTasksLists
    tasks.o(i.xTaskResumeAll) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    tasks.o(i.xTaskResumeAll) refers to list.o(i.uxListRemove) for uxListRemove
    tasks.o(i.xTaskResumeAll) refers to list.o(i.vListInsertEnd) for vListInsertEnd
    tasks.o(i.xTaskResumeAll) refers to tasks.o(i.prvResetNextTaskUnblockTime) for prvResetNextTaskUnblockTime
    tasks.o(i.xTaskResumeAll) refers to tasks.o(i.xTaskIncrementTick) for xTaskIncrementTick
    tasks.o(i.xTaskResumeAll) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    tasks.o(i.xTaskResumeAll) refers to tasks.o(.data) for uxSchedulerSuspended
    tasks.o(i.xTaskResumeAll) refers to tasks.o(.bss) for xPendingReadyList
    tasks.o(i.xTaskResumeFromISR) refers to tasks.o(i.prvTaskIsTaskSuspended) for prvTaskIsTaskSuspended
    tasks.o(i.xTaskResumeFromISR) refers to list.o(i.uxListRemove) for uxListRemove
    tasks.o(i.xTaskResumeFromISR) refers to list.o(i.vListInsertEnd) for vListInsertEnd
    tasks.o(i.xTaskResumeFromISR) refers to tasks.o(.data) for uxSchedulerSuspended
    tasks.o(i.xTaskResumeFromISR) refers to tasks.o(.bss) for pxReadyTasksLists
    rt_memcpy_v6.o(.text) refers to rt_memcpy_w.o(.text) for __aeabi_memcpy4
    __main.o(!!!main) refers to __rtentry.o(.ARM.Collect$$rtentry$$00000000) for __rt_entry
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$0000000A) for __rt_entry_li
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) for __rt_entry_main
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$0000000C) for __rt_entry_postli_1
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$00000009) for __rt_entry_postsh_1
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$00000002) for __rt_entry_presh_1
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry4.o(.ARM.Collect$$rtentry$$00000004) for __rt_entry_sh
    __rtentry2.o(.ARM.Collect$$rtentry$$00000008) refers to boardinit2.o(.text) for _platform_post_stackheap_init
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000A) refers to libinit.o(.ARM.Collect$$libinit$$00000000) for __rt_lib_init
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000B) refers to boardinit3.o(.text) for _platform_post_lib_init
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) refers to main.o(i.main) for main
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) refers to exit.o(.text) for exit
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$00000001) for .ARM.Collect$$rtentry$$00000001
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$00000008) for .ARM.Collect$$rtentry$$00000008
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$0000000A) for .ARM.Collect$$rtentry$$0000000A
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$0000000B) for .ARM.Collect$$rtentry$$0000000B
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) for .ARM.Collect$$rtentry$$0000000D
    __rtentry4.o(.ARM.Collect$$rtentry$$00000004) refers to sys_stackheap_outer.o(.text) for __user_setup_stackheap
    __rtentry4.o(.ARM.exidx) refers to __rtentry4.o(.ARM.Collect$$rtentry$$00000004) for .ARM.Collect$$rtentry$$00000004
    sys_stackheap_outer.o(.text) refers to libspace.o(.text) for __user_perproc_libspace
    sys_stackheap_outer.o(.text) refers to startup_stm32f10x_md.o(.text) for __user_initial_stackheap
    exit.o(.text) refers to rtexit.o(.ARM.Collect$$rtexit$$00000000) for __rt_exit
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000002E) for __rt_lib_init_alloca_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000002C) for __rt_lib_init_argv_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000001B) for __rt_lib_init_atexit_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000021) for __rt_lib_init_clock_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000032) for __rt_lib_init_cpp_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000030) for __rt_lib_init_exceptions_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000002) for __rt_lib_init_fp_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000001F) for __rt_lib_init_fp_trap_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000023) for __rt_lib_init_getenv_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000000A) for __rt_lib_init_heap_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000011) for __rt_lib_init_lc_collate_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000013) for __rt_lib_init_lc_ctype_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000015) for __rt_lib_init_lc_monetary_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000017) for __rt_lib_init_lc_numeric_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000019) for __rt_lib_init_lc_time_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000004) for __rt_lib_init_preinit_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000000E) for __rt_lib_init_rand_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000033) for __rt_lib_init_return
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000001D) for __rt_lib_init_signal_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000025) for __rt_lib_init_stdio_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000000C) for __rt_lib_init_user_alloc_1
    libspace.o(.text) refers to libspace.o(.bss) for __libspace_start
    rtexit.o(.ARM.Collect$$rtexit$$00000000) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000004) for __rt_exit_exit
    rtexit.o(.ARM.Collect$$rtexit$$00000000) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000003) for __rt_exit_ls
    rtexit.o(.ARM.Collect$$rtexit$$00000000) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000002) for __rt_exit_prels_1
    rtexit.o(.ARM.exidx) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000004) for __rt_exit_exit
    rtexit.o(.ARM.exidx) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000003) for __rt_exit_ls
    rtexit.o(.ARM.exidx) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000002) for __rt_exit_prels_1
    rtexit.o(.ARM.exidx) refers to rtexit.o(.ARM.Collect$$rtexit$$00000000) for .ARM.Collect$$rtexit$$00000000
    libinit2.o(.ARM.Collect$$libinit$$00000010) refers to libinit2.o(.ARM.Collect$$libinit$$0000000F) for .ARM.Collect$$libinit$$0000000F
    libinit2.o(.ARM.Collect$$libinit$$00000012) refers to libinit2.o(.ARM.Collect$$libinit$$0000000F) for .ARM.Collect$$libinit$$0000000F
    libinit2.o(.ARM.Collect$$libinit$$00000014) refers to libinit2.o(.ARM.Collect$$libinit$$0000000F) for .ARM.Collect$$libinit$$0000000F
    libinit2.o(.ARM.Collect$$libinit$$00000016) refers to libinit2.o(.ARM.Collect$$libinit$$0000000F) for .ARM.Collect$$libinit$$0000000F
    libinit2.o(.ARM.Collect$$libinit$$00000018) refers to libinit2.o(.ARM.Collect$$libinit$$0000000F) for .ARM.Collect$$libinit$$0000000F
    libinit2.o(.ARM.Collect$$libinit$$00000026) refers to argv_veneer.o(.emb_text) for __ARM_argv_veneer
    libinit2.o(.ARM.Collect$$libinit$$00000027) refers to argv_veneer.o(.emb_text) for __ARM_argv_veneer
    rtexit2.o(.ARM.Collect$$rtexit$$00000003) refers to libshutdown.o(.ARM.Collect$$libshutdown$$00000000) for __rt_lib_shutdown
    rtexit2.o(.ARM.Collect$$rtexit$$00000004) refers to sys_exit.o(.text) for _sys_exit
    rtexit2.o(.ARM.exidx) refers to rtexit2.o(.ARM.Collect$$rtexit$$00000001) for .ARM.Collect$$rtexit$$00000001
    rtexit2.o(.ARM.exidx) refers to rtexit2.o(.ARM.Collect$$rtexit$$00000003) for .ARM.Collect$$rtexit$$00000003
    rtexit2.o(.ARM.exidx) refers to rtexit2.o(.ARM.Collect$$rtexit$$00000004) for .ARM.Collect$$rtexit$$00000004
    argv_veneer.o(.emb_text) refers to no_argv.o(.text) for __ARM_get_argv
    sys_exit.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_exit.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    _get_argv_nomalloc.o(.text) refers (Special) to hrguard.o(.text) for __heap_region$guard
    _get_argv_nomalloc.o(.text) refers to defsig_rtmem_outer.o(.text) for __rt_SIGRTMEM
    _get_argv_nomalloc.o(.text) refers to sys_command.o(.text) for _sys_command_string
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000002) for __rt_lib_shutdown_cpp_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000007) for __rt_lib_shutdown_fp_trap_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F) for __rt_lib_shutdown_heap_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000010) for __rt_lib_shutdown_return
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A) for __rt_lib_shutdown_signal_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000004) for __rt_lib_shutdown_stdio_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C) for __rt_lib_shutdown_user_alloc_1
    sys_command.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_command.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    defsig_rtmem_outer.o(.text) refers to defsig_rtmem_inner.o(.text) for __rt_SIGRTMEM_inner
    defsig_rtmem_outer.o(.text) refers to defsig_exit.o(.text) for __sig_exit
    defsig_rtmem_formal.o(.text) refers to rt_raise.o(.text) for __rt_raise
    rt_raise.o(.text) refers to __raise.o(.text) for __raise
    rt_raise.o(.text) refers to sys_exit.o(.text) for _sys_exit
    defsig_exit.o(.text) refers to sys_exit.o(.text) for _sys_exit
    defsig_rtmem_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    __raise.o(.text) refers to defsig.o(CL$$defsig) for __default_signal_handler
    defsig_general.o(.text) refers to sys_wrch.o(.text) for _ttywrch
    sys_wrch.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_wrch.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    defsig.o(CL$$defsig) refers to defsig_rtmem_inner.o(.text) for __rt_SIGRTMEM_inner
    defsig_abrt_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_fpe_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_rtred_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_stak_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_pvfn_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_cppl_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_segv_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_other.o(.text) refers to defsig_general.o(.text) for __default_signal_display


==============================================================================

Removing Unused input sections from the image.

    Removing main.o(i.Sender), (228 bytes).
    Removing usart.o(i.usart2_init), (188 bytes).
    Removing usart.o(i.usartSendArrar), (62 bytes).
    Removing core_cm3.o(.emb_text), (32 bytes).
    Removing system_stm32f10x.o(i.SystemCoreClockUpdate), (164 bytes).
    Removing system_stm32f10x.o(.data), (20 bytes).
    Removing event_groups.o(i.prvTestWaitCondition), (30 bytes).
    Removing event_groups.o(i.vEventGroupClearBitsCallback), (16 bytes).
    Removing event_groups.o(i.vEventGroupDelete), (42 bytes).
    Removing event_groups.o(i.vEventGroupSetBitsCallback), (16 bytes).
    Removing event_groups.o(i.xEventGroupClearBits), (32 bytes).
    Removing event_groups.o(i.xEventGroupCreate), (26 bytes).
    Removing event_groups.o(i.xEventGroupGetBitsFromISR), (44 bytes).
    Removing event_groups.o(i.xEventGroupSetBits), (146 bytes).
    Removing event_groups.o(i.xEventGroupSync), (164 bytes).
    Removing event_groups.o(i.xEventGroupWaitBits), (200 bytes).
    Removing heap_1.o(i.vPortInitialiseBlocks), (12 bytes).
    Removing heap_1.o(i.xPortGetFreeHeapSize), (16 bytes).
    Removing port.o(i.vPortEndScheduler), (2 bytes).
    Removing queue.o(i.uxQueueMessagesWaiting), (18 bytes).
    Removing queue.o(i.uxQueueMessagesWaitingFromISR), (6 bytes).
    Removing queue.o(i.uxQueueSpacesAvailable), (24 bytes).
    Removing queue.o(i.vQueueDelete), (14 bytes).
    Removing queue.o(i.xQueueGenericSendFromISR), (134 bytes).
    Removing queue.o(i.xQueueIsQueueEmptyFromISR), (14 bytes).
    Removing queue.o(i.xQueueIsQueueFullFromISR), (18 bytes).
    Removing queue.o(i.xQueuePeekFromISR), (74 bytes).
    Removing queue.o(i.xQueueReceiveFromISR), (130 bytes).
    Removing tasks.o(i.pcTaskGetName), (24 bytes).
    Removing tasks.o(i.prvTaskIsTaskSuspended), (64 bytes).
    Removing tasks.o(i.ulTaskNotifyTake), (116 bytes).
    Removing tasks.o(i.uxTaskGetNumberOfTasks), (12 bytes).
    Removing tasks.o(i.uxTaskPriorityGet), (36 bytes).
    Removing tasks.o(i.uxTaskPriorityGetFromISR), (56 bytes).
    Removing tasks.o(i.uxTaskResetEventItemValue), (28 bytes).
    Removing tasks.o(i.vTaskDelayUntil), (116 bytes).
    Removing tasks.o(i.vTaskDelete), (204 bytes).
    Removing tasks.o(i.vTaskEndScheduler), (36 bytes).
    Removing tasks.o(i.vTaskNotifyGiveFromISR), (180 bytes).
    Removing tasks.o(i.vTaskPlaceOnUnorderedEventList), (44 bytes).
    Removing tasks.o(i.vTaskPrioritySet), (232 bytes).
    Removing tasks.o(i.vTaskResume), (120 bytes).
    Removing tasks.o(i.vTaskSuspend), (188 bytes).
    Removing tasks.o(i.xTaskGenericNotify), (196 bytes).
    Removing tasks.o(i.xTaskGenericNotifyFromISR), (252 bytes).
    Removing tasks.o(i.xTaskGetTickCount), (12 bytes).
    Removing tasks.o(i.xTaskGetTickCountFromISR), (12 bytes).
    Removing tasks.o(i.xTaskNotifyStateClear), (52 bytes).
    Removing tasks.o(i.xTaskNotifyWait), (160 bytes).
    Removing tasks.o(i.xTaskRemoveFromUnorderedEventList), (112 bytes).
    Removing tasks.o(i.xTaskResumeFromISR), (152 bytes).

51 unused section(s) (total 4276 bytes) removed from the image.

==============================================================================

Image Symbol Table

    Local Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    ../clib/angel/boardlib.s                 0x00000000   Number         0  boardshut.o ABSOLUTE
    ../clib/angel/boardlib.s                 0x00000000   Number         0  boardinit2.o ABSOLUTE
    ../clib/angel/boardlib.s                 0x00000000   Number         0  boardinit3.o ABSOLUTE
    ../clib/angel/boardlib.s                 0x00000000   Number         0  boardinit1.o ABSOLUTE
    ../clib/angel/handlers.s                 0x00000000   Number         0  __scatter_zi.o ABSOLUTE
    ../clib/angel/handlers.s                 0x00000000   Number         0  __scatter_copy.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  rtexit.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  __rtentry4.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  __rtentry2.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  __rtentry.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  rtexit2.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  rt_raise.o ABSOLUTE
    ../clib/angel/scatter.s                  0x00000000   Number         0  __scatter.o ABSOLUTE
    ../clib/angel/startup.s                  0x00000000   Number         0  __main.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  sys_stackheap_outer.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  indicate_semi.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  libspace.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  use_no_semi.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_command.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_exit.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_wrch.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  argv_veneer.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  no_argv.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  _get_argv_nomalloc.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  argv_veneer.o ABSOLUTE
    ../clib/heapalloc.c                      0x00000000   Number         0  hrguard.o ABSOLUTE
    ../clib/heapaux.c                        0x00000000   Number         0  heapauxi.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libinit2.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libinit.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libshutdown2.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libshutdown.o ABSOLUTE
    ../clib/memcpset.s                       0x00000000   Number         0  rt_memcpy_w.o ABSOLUTE
    ../clib/memcpset.s                       0x00000000   Number         0  rt_memcpy_v6.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtmem_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_exit.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtmem_formal.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtmem_outer.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_abrt_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_segv_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_cppl_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_pvfn_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_stak_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtred_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_other.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_fpe_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_general.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  __raise.o ABSOLUTE
    ../clib/signal.s                         0x00000000   Number         0  defsig.o ABSOLUTE
    ../clib/stdlib.c                         0x00000000   Number         0  exit.o ABSOLUTE
    ../clib/string.c                         0x00000000   Number         0  strlen.o ABSOLUTE
    ../fplib/fpinit.s                        0x00000000   Number         0  fpinit.o ABSOLUTE
    CMSIS\\src\\core_cm3.c                   0x00000000   Number         0  core_cm3.o ABSOLUTE
    CMSIS\src\core_cm3.c                     0x00000000   Number         0  core_cm3.o ABSOLUTE
    CMSIS\src\system_stm32f10x.c             0x00000000   Number         0  system_stm32f10x.o ABSOLUTE
    FreeRTOS\\src\\port.c                    0x00000000   Number         0  port.o ABSOLUTE
    FreeRTOS\src\croutine.c                  0x00000000   Number         0  croutine.o ABSOLUTE
    FreeRTOS\src\event_groups.c              0x00000000   Number         0  event_groups.o ABSOLUTE
    FreeRTOS\src\heap_1.c                    0x00000000   Number         0  heap_1.o ABSOLUTE
    FreeRTOS\src\list.c                      0x00000000   Number         0  list.o ABSOLUTE
    FreeRTOS\src\port.c                      0x00000000   Number         0  port.o ABSOLUTE
    FreeRTOS\src\queue.c                     0x00000000   Number         0  queue.o ABSOLUTE
    FreeRTOS\src\tasks.c                     0x00000000   Number         0  tasks.o ABSOLUTE
    FreeRTOS\src\timers.c                    0x00000000   Number         0  timers.o ABSOLUTE
    Startup\startup_stm32f10x_md.s           0x00000000   Number         0  startup_stm32f10x_md.o ABSOLUTE
    UserSource\src\io.c                      0x00000000   Number         0  io.o ABSOLUTE
    UserSource\src\led.c                     0x00000000   Number         0  led.o ABSOLUTE
    UserSource\src\main.c                    0x00000000   Number         0  main.o ABSOLUTE
    UserSource\src\stepmotor.c               0x00000000   Number         0  stepmotor.o ABSOLUTE
    UserSource\src\usart.c                   0x00000000   Number         0  usart.o ABSOLUTE
    dc.s                                     0x00000000   Number         0  dc.o ABSOLUTE
    RESET                                    0x08000000   Section      236  startup_stm32f10x_md.o(RESET)
    !!!main                                  0x080000ec   Section        8  __main.o(!!!main)
    !!!scatter                               0x080000f4   Section       52  __scatter.o(!!!scatter)
    !!handler_copy                           0x08000128   Section       26  __scatter_copy.o(!!handler_copy)
    !!handler_zi                             0x08000144   Section       28  __scatter_zi.o(!!handler_zi)
    .ARM.Collect$$libinit$$00000000          0x08000160   Section        2  libinit.o(.ARM.Collect$$libinit$$00000000)
    .ARM.Collect$$libinit$$00000002          0x08000162   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000002)
    .ARM.Collect$$libinit$$00000004          0x08000162   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000004)
    .ARM.Collect$$libinit$$0000000A          0x08000162   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000000A)
    .ARM.Collect$$libinit$$0000000C          0x08000162   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000000C)
    .ARM.Collect$$libinit$$0000000E          0x08000162   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000000E)
    .ARM.Collect$$libinit$$00000011          0x08000162   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000011)
    .ARM.Collect$$libinit$$00000013          0x08000162   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000013)
    .ARM.Collect$$libinit$$00000015          0x08000162   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000015)
    .ARM.Collect$$libinit$$00000017          0x08000162   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000017)
    .ARM.Collect$$libinit$$00000019          0x08000162   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000019)
    .ARM.Collect$$libinit$$0000001B          0x08000162   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000001B)
    .ARM.Collect$$libinit$$0000001D          0x08000162   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000001D)
    .ARM.Collect$$libinit$$0000001F          0x08000162   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000001F)
    .ARM.Collect$$libinit$$00000021          0x08000162   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000021)
    .ARM.Collect$$libinit$$00000023          0x08000162   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000023)
    .ARM.Collect$$libinit$$00000025          0x08000162   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000025)
    .ARM.Collect$$libinit$$0000002C          0x08000162   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000002C)
    .ARM.Collect$$libinit$$0000002E          0x08000162   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000002E)
    .ARM.Collect$$libinit$$00000030          0x08000162   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000030)
    .ARM.Collect$$libinit$$00000032          0x08000162   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000032)
    .ARM.Collect$$libinit$$00000033          0x08000162   Section        2  libinit2.o(.ARM.Collect$$libinit$$00000033)
    .ARM.Collect$$libshutdown$$00000000      0x08000164   Section        2  libshutdown.o(.ARM.Collect$$libshutdown$$00000000)
    .ARM.Collect$$libshutdown$$00000002      0x08000166   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000002)
    .ARM.Collect$$libshutdown$$00000004      0x08000166   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000004)
    .ARM.Collect$$libshutdown$$00000007      0x08000166   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000007)
    .ARM.Collect$$libshutdown$$0000000A      0x08000166   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A)
    .ARM.Collect$$libshutdown$$0000000C      0x08000166   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C)
    .ARM.Collect$$libshutdown$$0000000F      0x08000166   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F)
    .ARM.Collect$$libshutdown$$00000010      0x08000166   Section        2  libshutdown2.o(.ARM.Collect$$libshutdown$$00000010)
    .ARM.Collect$$rtentry$$00000000          0x08000168   Section        0  __rtentry.o(.ARM.Collect$$rtentry$$00000000)
    .ARM.Collect$$rtentry$$00000002          0x08000168   Section        0  __rtentry2.o(.ARM.Collect$$rtentry$$00000002)
    .ARM.Collect$$rtentry$$00000004          0x08000168   Section        6  __rtentry4.o(.ARM.Collect$$rtentry$$00000004)
    .ARM.Collect$$rtentry$$00000009          0x0800016e   Section        0  __rtentry2.o(.ARM.Collect$$rtentry$$00000009)
    .ARM.Collect$$rtentry$$0000000A          0x0800016e   Section        4  __rtentry2.o(.ARM.Collect$$rtentry$$0000000A)
    .ARM.Collect$$rtentry$$0000000C          0x08000172   Section        0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000C)
    .ARM.Collect$$rtentry$$0000000D          0x08000172   Section        8  __rtentry2.o(.ARM.Collect$$rtentry$$0000000D)
    .ARM.Collect$$rtexit$$00000000           0x0800017a   Section        2  rtexit.o(.ARM.Collect$$rtexit$$00000000)
    .ARM.Collect$$rtexit$$00000002           0x0800017c   Section        0  rtexit2.o(.ARM.Collect$$rtexit$$00000002)
    .ARM.Collect$$rtexit$$00000003           0x0800017c   Section        4  rtexit2.o(.ARM.Collect$$rtexit$$00000003)
    .ARM.Collect$$rtexit$$00000004           0x08000180   Section        6  rtexit2.o(.ARM.Collect$$rtexit$$00000004)
    .emb_text                                0x08000188   Section      150  port.o(.emb_text)
    .text                                    0x08000220   Section       64  startup_stm32f10x_md.o(.text)
    .text                                    0x08000260   Section      138  rt_memcpy_v6.o(.text)
    .text                                    0x080002ea   Section        0  heapauxi.o(.text)
    .text                                    0x080002f0   Section      100  rt_memcpy_w.o(.text)
    .text                                    0x08000354   Section       74  sys_stackheap_outer.o(.text)
    .text                                    0x0800039e   Section        0  exit.o(.text)
    .text                                    0x080003b0   Section        8  libspace.o(.text)
    .text                                    0x080003b8   Section        0  sys_exit.o(.text)
    .text                                    0x080003c4   Section        2  use_no_semi.o(.text)
    .text                                    0x080003c6   Section        0  indicate_semi.o(.text)
    i.IO_ConfigLine                          0x080003c8   Section        0  io.o(i.IO_ConfigLine)
    i.IO_Init                                0x080004a0   Section        0  io.o(i.IO_Init)
    i.IO_SetLine                             0x080004e4   Section        0  io.o(i.IO_SetLine)
    i.NVIC_EnableIRQ                         0x08000518   Section        0  usart.o(i.NVIC_EnableIRQ)
    NVIC_EnableIRQ                           0x08000519   Thumb Code    22  usart.o(i.NVIC_EnableIRQ)
    i.Sender_1                               0x08000530   Section        0  main.o(i.Sender_1)
    i.SetSysClock                            0x080006ec   Section        0  system_stm32f10x.o(i.SetSysClock)
    SetSysClock                              0x080006ed   Thumb Code     8  system_stm32f10x.o(i.SetSysClock)
    i.SetSysClockTo72                        0x080006f4   Section        0  system_stm32f10x.o(i.SetSysClockTo72)
    SetSysClockTo72                          0x080006f5   Thumb Code   214  system_stm32f10x.o(i.SetSysClockTo72)
    i.Stepper_Init                           0x080007d4   Section        0  stepmotor.o(i.Stepper_Init)
    i.SysTick_Handler                        0x08000894   Section        0  port.o(i.SysTick_Handler)
    i.SystemInit                             0x080008c8   Section        0  system_stm32f10x.o(i.SystemInit)
    i.USART1_IRQHandler                      0x08000928   Section        0  main.o(i.USART1_IRQHandler)
    i.led_init                               0x080009ac   Section        0  led.o(i.led_init)
    i.main                                   0x080009d8   Section        0  main.o(i.main)
    i.prvAddCurrentTaskToDelayedList         0x08000a4c   Section        0  tasks.o(i.prvAddCurrentTaskToDelayedList)
    prvAddCurrentTaskToDelayedList           0x08000a4d   Thumb Code   124  tasks.o(i.prvAddCurrentTaskToDelayedList)
    i.prvAddNewTaskToReadyList               0x08000ae4   Section        0  tasks.o(i.prvAddNewTaskToReadyList)
    prvAddNewTaskToReadyList                 0x08000ae5   Thumb Code   150  tasks.o(i.prvAddNewTaskToReadyList)
    i.prvCheckTasksWaitingTermination        0x08000b98   Section        0  tasks.o(i.prvCheckTasksWaitingTermination)
    prvCheckTasksWaitingTermination          0x08000b99   Thumb Code    86  tasks.o(i.prvCheckTasksWaitingTermination)
    i.prvCopyDataFromQueue                   0x08000bfc   Section        0  queue.o(i.prvCopyDataFromQueue)
    prvCopyDataFromQueue                     0x08000bfd   Thumb Code    42  queue.o(i.prvCopyDataFromQueue)
    i.prvCopyDataToQueue                     0x08000c26   Section        0  queue.o(i.prvCopyDataToQueue)
    prvCopyDataToQueue                       0x08000c27   Thumb Code   106  queue.o(i.prvCopyDataToQueue)
    i.prvDeleteTCB                           0x08000c90   Section        0  tasks.o(i.prvDeleteTCB)
    prvDeleteTCB                             0x08000c91   Thumb Code    18  tasks.o(i.prvDeleteTCB)
    i.prvIdleTask                            0x08000ca4   Section        0  tasks.o(i.prvIdleTask)
    prvIdleTask                              0x08000ca5   Thumb Code    32  tasks.o(i.prvIdleTask)
    i.prvInitialiseNewQueue                  0x08000ccc   Section        0  queue.o(i.prvInitialiseNewQueue)
    prvInitialiseNewQueue                    0x08000ccd   Thumb Code    38  queue.o(i.prvInitialiseNewQueue)
    i.prvInitialiseNewTask                   0x08000cf2   Section        0  tasks.o(i.prvInitialiseNewTask)
    prvInitialiseNewTask                     0x08000cf3   Thumb Code   128  tasks.o(i.prvInitialiseNewTask)
    i.prvInitialiseTaskLists                 0x08000d74   Section        0  tasks.o(i.prvInitialiseTaskLists)
    prvInitialiseTaskLists                   0x08000d75   Thumb Code    70  tasks.o(i.prvInitialiseTaskLists)
    i.prvIsQueueEmpty                        0x08000ddc   Section        0  queue.o(i.prvIsQueueEmpty)
    prvIsQueueEmpty                          0x08000ddd   Thumb Code    26  queue.o(i.prvIsQueueEmpty)
    i.prvIsQueueFull                         0x08000df6   Section        0  queue.o(i.prvIsQueueFull)
    prvIsQueueFull                           0x08000df7   Thumb Code    30  queue.o(i.prvIsQueueFull)
    i.prvResetNextTaskUnblockTime            0x08000e14   Section        0  tasks.o(i.prvResetNextTaskUnblockTime)
    prvResetNextTaskUnblockTime              0x08000e15   Thumb Code    42  tasks.o(i.prvResetNextTaskUnblockTime)
    i.prvTaskExitError                       0x08000e48   Section        0  port.o(i.prvTaskExitError)
    prvTaskExitError                         0x08000e49   Thumb Code    22  port.o(i.prvTaskExitError)
    i.prvUnlockQueue                         0x08000e5e   Section        0  queue.o(i.prvUnlockQueue)
    prvUnlockQueue                           0x08000e5f   Thumb Code   126  queue.o(i.prvUnlockQueue)
    i.pvPortMalloc                           0x08000edc   Section        0  heap_1.o(i.pvPortMalloc)
    i.pxPortInitialiseStack                  0x08000f4c   Section        0  port.o(i.pxPortInitialiseStack)
    i.rcc_init                               0x08000f70   Section        0  main.o(i.rcc_init)
    i.set_resolution                         0x0800102c   Section        0  stepmotor.o(i.set_resolution)
    i.st_Rotate                              0x08001164   Section        0  stepmotor.o(i.st_Rotate)
    i.st_Step                                0x080011b0   Section        0  stepmotor.o(i.st_Step)
    i.st_vMotor1                             0x0800120c   Section        0  stepmotor.o(i.st_vMotor1)
    i.st_vMotor2                             0x0800125c   Section        0  stepmotor.o(i.st_vMotor2)
    i.usart1_init                            0x080012ac   Section        0  usart.o(i.usart1_init)
    i.usart_send_data                        0x08001368   Section        0  usart.o(i.usart_send_data)
    i.usart_send_string                      0x08001378   Section        0  usart.o(i.usart_send_string)
    i.uxListRemove                           0x08001398   Section        0  list.o(i.uxListRemove)
    i.vBlinker                               0x080013c0   Section        0  main.o(i.vBlinker)
    i.vListInitialise                        0x080013f0   Section        0  list.o(i.vListInitialise)
    i.vListInitialiseItem                    0x0800140a   Section        0  list.o(i.vListInitialiseItem)
    i.vListInsert                            0x08001410   Section        0  list.o(i.vListInsert)
    i.vListInsertEnd                         0x08001444   Section        0  list.o(i.vListInsertEnd)
    i.vPortEnterCritical                     0x0800145c   Section        0  port.o(i.vPortEnterCritical)
    i.vPortExitCritical                      0x08001480   Section        0  port.o(i.vPortExitCritical)
    i.vPortFree                              0x080014a0   Section        0  heap_1.o(i.vPortFree)
    i.vPortSetupTimerInterrupt               0x080014a4   Section        0  port.o(i.vPortSetupTimerInterrupt)
    i.vTaskDelay                             0x080014b8   Section        0  tasks.o(i.vTaskDelay)
    i.vTaskMissedYield                       0x080014ec   Section        0  tasks.o(i.vTaskMissedYield)
    i.vTaskPlaceOnEventList                  0x080014f8   Section        0  tasks.o(i.vTaskPlaceOnEventList)
    i.vTaskSetTimeOutState                   0x08001518   Section        0  tasks.o(i.vTaskSetTimeOutState)
    i.vTaskStartScheduler                    0x08001530   Section        0  tasks.o(i.vTaskStartScheduler)
    i.vTaskSuspendAll                        0x08001594   Section        0  tasks.o(i.vTaskSuspendAll)
    i.vTaskSwitchContext                     0x080015a4   Section        0  tasks.o(i.vTaskSwitchContext)
    i.xPortStartScheduler                    0x08001604   Section        0  port.o(i.xPortStartScheduler)
    i.xQueueGenericCreate                    0x08001638   Section        0  queue.o(i.xQueueGenericCreate)
    i.xQueueGenericReceive                   0x08001670   Section        0  queue.o(i.xQueueGenericReceive)
    i.xQueueGenericReset                     0x080017ac   Section        0  queue.o(i.xQueueGenericReset)
    i.xQueueGenericSend                      0x0800182c   Section        0  queue.o(i.xQueueGenericSend)
    i.xQueueGiveFromISR                      0x08001944   Section        0  queue.o(i.xQueueGiveFromISR)
    i.xTaskCheckForTimeOut                   0x080019bc   Section        0  tasks.o(i.xTaskCheckForTimeOut)
    i.xTaskCreate                            0x08001a18   Section        0  tasks.o(i.xTaskCreate)
    i.xTaskIncrementTick                     0x08001a78   Section        0  tasks.o(i.xTaskIncrementTick)
    i.xTaskRemoveFromEventList               0x08001b94   Section        0  tasks.o(i.xTaskRemoveFromEventList)
    i.xTaskResumeAll                         0x08001c14   Section        0  tasks.o(i.xTaskResumeAll)
    .constdata                               0x08001cfc   Section       96  io.o(.constdata)
    .data                                    0x20000000   Section       36  main.o(.data)
    xHigherPriorityTaskWoken                 0x20000020   Data           4  main.o(.data)
    .data                                    0x20000024   Section       12  stepmotor.o(.data)
    .data                                    0x20000030   Section        8  heap_1.o(.data)
    xNextFreeByte                            0x20000030   Data           4  heap_1.o(.data)
    pucAlignedHeap                           0x20000034   Data           4  heap_1.o(.data)
    .data                                    0x20000038   Section        4  port.o(.data)
    uxCriticalNesting                        0x20000038   Data           4  port.o(.data)
    .data                                    0x2000003c   Section       60  tasks.o(.data)
    pxDelayedTaskList                        0x20000040   Data           4  tasks.o(.data)
    pxOverflowDelayedTaskList                0x20000044   Data           4  tasks.o(.data)
    uxDeletedTasksWaitingCleanUp             0x20000048   Data           4  tasks.o(.data)
    uxCurrentNumberOfTasks                   0x2000004c   Data           4  tasks.o(.data)
    xTickCount                               0x20000050   Data           4  tasks.o(.data)
    uxTopReadyPriority                       0x20000054   Data           4  tasks.o(.data)
    xSchedulerRunning                        0x20000058   Data           4  tasks.o(.data)
    uxPendedTicks                            0x2000005c   Data           4  tasks.o(.data)
    xYieldPending                            0x20000060   Data           4  tasks.o(.data)
    xNumOfOverflows                          0x20000064   Data           4  tasks.o(.data)
    uxTaskNumber                             0x20000068   Data           4  tasks.o(.data)
    xNextTaskUnblockTime                     0x2000006c   Data           4  tasks.o(.data)
    xIdleTaskHandle                          0x20000070   Data           4  tasks.o(.data)
    uxSchedulerSuspended                     0x20000074   Data           4  tasks.o(.data)
    .bss                                     0x20000078   Section        9  main.o(.bss)
    .bss                                     0x20000081   Section    17408  heap_1.o(.bss)
    ucHeap                                   0x20000081   Data       17408  heap_1.o(.bss)
    .bss                                     0x20004484   Section      200  tasks.o(.bss)
    pxReadyTasksLists                        0x20004484   Data         100  tasks.o(.bss)
    xDelayedTaskList1                        0x200044e8   Data          20  tasks.o(.bss)
    xDelayedTaskList2                        0x200044fc   Data          20  tasks.o(.bss)
    xPendingReadyList                        0x20004510   Data          20  tasks.o(.bss)
    xTasksWaitingTermination                 0x20004524   Data          20  tasks.o(.bss)
    xSuspendedTaskList                       0x20004538   Data          20  tasks.o(.bss)
    .bss                                     0x2000454c   Section       96  libspace.o(.bss)
    HEAP                                     0x200045b0   Section      512  startup_stm32f10x_md.o(HEAP)
    Heap_Mem                                 0x200045b0   Data         512  startup_stm32f10x_md.o(HEAP)
    STACK                                    0x200047b0   Section     1024  startup_stm32f10x_md.o(STACK)
    Stack_Mem                                0x200047b0   Data        1024  startup_stm32f10x_md.o(STACK)
    __initial_sp                             0x20004bb0   Data           0  startup_stm32f10x_md.o(STACK)

    Global Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    BuildAttributes$$THM_ISAv4$P$D$K$B$S$PE$A:L22UL41UL21$X:L11$S22US41US21$IEEE1$IW$USESV6$~STKCKD$USESV7$~SHL$OSPACE$ROPI$EBA8$UX$STANDARDLIB$REQ8$PRES8$EABIv2 0x00000000   Number         0  anon$$obj.o ABSOLUTE
    __ARM_use_no_argv                        0x00000000   Number         0  main.o ABSOLUTE
    __ARM_exceptions_init                     - Undefined Weak Reference
    __alloca_initialize                       - Undefined Weak Reference
    __arm_preinit_                            - Undefined Weak Reference
    __cpp_initialize__aeabi_                  - Undefined Weak Reference
    __cxa_finalize                            - Undefined Weak Reference
    __rt_locale                               - Undefined Weak Reference
    __sigvec_lookup                           - Undefined Weak Reference
    _atexit_init                              - Undefined Weak Reference
    _call_atexit_fns                          - Undefined Weak Reference
    _clock_init                               - Undefined Weak Reference
    _fp_trap_init                             - Undefined Weak Reference
    _fp_trap_shutdown                         - Undefined Weak Reference
    _get_lc_collate                           - Undefined Weak Reference
    _get_lc_ctype                             - Undefined Weak Reference
    _get_lc_monetary                          - Undefined Weak Reference
    _get_lc_numeric                           - Undefined Weak Reference
    _get_lc_time                              - Undefined Weak Reference
    _getenv_init                              - Undefined Weak Reference
    _handle_redirection                       - Undefined Weak Reference
    _init_alloc                               - Undefined Weak Reference
    _init_user_alloc                          - Undefined Weak Reference
    _initio                                   - Undefined Weak Reference
    _rand_init                                - Undefined Weak Reference
    _signal_finish                            - Undefined Weak Reference
    _signal_init                              - Undefined Weak Reference
    _terminate_alloc                          - Undefined Weak Reference
    _terminate_user_alloc                     - Undefined Weak Reference
    _terminateio                              - Undefined Weak Reference
    __Vectors_Size                           0x000000ec   Number         0  startup_stm32f10x_md.o ABSOLUTE
    __Vectors                                0x08000000   Data           4  startup_stm32f10x_md.o(RESET)
    __Vectors_End                            0x080000ec   Data           0  startup_stm32f10x_md.o(RESET)
    __main                                   0x080000ed   Thumb Code     8  __main.o(!!!main)
    __scatterload                            0x080000f5   Thumb Code     0  __scatter.o(!!!scatter)
    __scatterload_rt2                        0x080000f5   Thumb Code    44  __scatter.o(!!!scatter)
    __scatterload_rt2_thumb_only             0x080000f5   Thumb Code     0  __scatter.o(!!!scatter)
    __scatterload_null                       0x08000103   Thumb Code     0  __scatter.o(!!!scatter)
    __scatterload_copy                       0x08000129   Thumb Code    26  __scatter_copy.o(!!handler_copy)
    __scatterload_zeroinit                   0x08000145   Thumb Code    28  __scatter_zi.o(!!handler_zi)
    __rt_lib_init                            0x08000161   Thumb Code     0  libinit.o(.ARM.Collect$$libinit$$00000000)
    __rt_lib_init_alloca_1                   0x08000163   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000002E)
    __rt_lib_init_argv_1                     0x08000163   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000002C)
    __rt_lib_init_atexit_1                   0x08000163   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000001B)
    __rt_lib_init_clock_1                    0x08000163   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000021)
    __rt_lib_init_cpp_1                      0x08000163   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000032)
    __rt_lib_init_exceptions_1               0x08000163   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000030)
    __rt_lib_init_fp_1                       0x08000163   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000002)
    __rt_lib_init_fp_trap_1                  0x08000163   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000001F)
    __rt_lib_init_getenv_1                   0x08000163   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000023)
    __rt_lib_init_heap_1                     0x08000163   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000000A)
    __rt_lib_init_lc_collate_1               0x08000163   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000011)
    __rt_lib_init_lc_ctype_1                 0x08000163   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000013)
    __rt_lib_init_lc_monetary_1              0x08000163   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000015)
    __rt_lib_init_lc_numeric_1               0x08000163   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000017)
    __rt_lib_init_lc_time_1                  0x08000163   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000019)
    __rt_lib_init_preinit_1                  0x08000163   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000004)
    __rt_lib_init_rand_1                     0x08000163   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000000E)
    __rt_lib_init_return                     0x08000163   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000033)
    __rt_lib_init_signal_1                   0x08000163   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000001D)
    __rt_lib_init_stdio_1                    0x08000163   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000025)
    __rt_lib_init_user_alloc_1               0x08000163   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000000C)
    __rt_lib_shutdown                        0x08000165   Thumb Code     0  libshutdown.o(.ARM.Collect$$libshutdown$$00000000)
    __rt_lib_shutdown_cpp_1                  0x08000167   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000002)
    __rt_lib_shutdown_fp_trap_1              0x08000167   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000007)
    __rt_lib_shutdown_heap_1                 0x08000167   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F)
    __rt_lib_shutdown_return                 0x08000167   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000010)
    __rt_lib_shutdown_signal_1               0x08000167   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A)
    __rt_lib_shutdown_stdio_1                0x08000167   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000004)
    __rt_lib_shutdown_user_alloc_1           0x08000167   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C)
    __rt_entry                               0x08000169   Thumb Code     0  __rtentry.o(.ARM.Collect$$rtentry$$00000000)
    __rt_entry_presh_1                       0x08000169   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$00000002)
    __rt_entry_sh                            0x08000169   Thumb Code     0  __rtentry4.o(.ARM.Collect$$rtentry$$00000004)
    __rt_entry_li                            0x0800016f   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000A)
    __rt_entry_postsh_1                      0x0800016f   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$00000009)
    __rt_entry_main                          0x08000173   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000D)
    __rt_entry_postli_1                      0x08000173   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000C)
    __rt_exit                                0x0800017b   Thumb Code     0  rtexit.o(.ARM.Collect$$rtexit$$00000000)
    __rt_exit_ls                             0x0800017d   Thumb Code     0  rtexit2.o(.ARM.Collect$$rtexit$$00000003)
    __rt_exit_prels_1                        0x0800017d   Thumb Code     0  rtexit2.o(.ARM.Collect$$rtexit$$00000002)
    __rt_exit_exit                           0x08000181   Thumb Code     0  rtexit2.o(.ARM.Collect$$rtexit$$00000004)
    SVC_Handler                              0x08000189   Thumb Code    32  port.o(.emb_text)
    __asm___6_port_c_39a90d8d__prvStartFirstTask 0x080001ad   Thumb Code    28  port.o(.emb_text)
    PendSV_Handler                           0x080001cd   Thumb Code    72  port.o(.emb_text)
    vPortGetIPSR                             0x08000219   Thumb Code     6  port.o(.emb_text)
    Reset_Handler                            0x08000221   Thumb Code     8  startup_stm32f10x_md.o(.text)
    NMI_Handler                              0x08000229   Thumb Code     2  startup_stm32f10x_md.o(.text)
    HardFault_Handler                        0x0800022b   Thumb Code     2  startup_stm32f10x_md.o(.text)
    MemManage_Handler                        0x0800022d   Thumb Code     2  startup_stm32f10x_md.o(.text)
    BusFault_Handler                         0x0800022f   Thumb Code     2  startup_stm32f10x_md.o(.text)
    UsageFault_Handler                       0x08000231   Thumb Code     2  startup_stm32f10x_md.o(.text)
    DebugMon_Handler                         0x08000235   Thumb Code     2  startup_stm32f10x_md.o(.text)
    ADC1_2_IRQHandler                        0x0800023b   Thumb Code     0  startup_stm32f10x_md.o(.text)
    CAN1_RX1_IRQHandler                      0x0800023b   Thumb Code     0  startup_stm32f10x_md.o(.text)
    CAN1_SCE_IRQHandler                      0x0800023b   Thumb Code     0  startup_stm32f10x_md.o(.text)
    DMA1_Channel1_IRQHandler                 0x0800023b   Thumb Code     0  startup_stm32f10x_md.o(.text)
    DMA1_Channel2_IRQHandler                 0x0800023b   Thumb Code     0  startup_stm32f10x_md.o(.text)
    DMA1_Channel3_IRQHandler                 0x0800023b   Thumb Code     0  startup_stm32f10x_md.o(.text)
    DMA1_Channel4_IRQHandler                 0x0800023b   Thumb Code     0  startup_stm32f10x_md.o(.text)
    DMA1_Channel5_IRQHandler                 0x0800023b   Thumb Code     0  startup_stm32f10x_md.o(.text)
    DMA1_Channel6_IRQHandler                 0x0800023b   Thumb Code     0  startup_stm32f10x_md.o(.text)
    DMA1_Channel7_IRQHandler                 0x0800023b   Thumb Code     0  startup_stm32f10x_md.o(.text)
    EXTI0_IRQHandler                         0x0800023b   Thumb Code     0  startup_stm32f10x_md.o(.text)
    EXTI15_10_IRQHandler                     0x0800023b   Thumb Code     0  startup_stm32f10x_md.o(.text)
    EXTI1_IRQHandler                         0x0800023b   Thumb Code     0  startup_stm32f10x_md.o(.text)
    EXTI2_IRQHandler                         0x0800023b   Thumb Code     0  startup_stm32f10x_md.o(.text)
    EXTI3_IRQHandler                         0x0800023b   Thumb Code     0  startup_stm32f10x_md.o(.text)
    EXTI4_IRQHandler                         0x0800023b   Thumb Code     0  startup_stm32f10x_md.o(.text)
    EXTI9_5_IRQHandler                       0x0800023b   Thumb Code     0  startup_stm32f10x_md.o(.text)
    FLASH_IRQHandler                         0x0800023b   Thumb Code     0  startup_stm32f10x_md.o(.text)
    I2C1_ER_IRQHandler                       0x0800023b   Thumb Code     0  startup_stm32f10x_md.o(.text)
    I2C1_EV_IRQHandler                       0x0800023b   Thumb Code     0  startup_stm32f10x_md.o(.text)
    I2C2_ER_IRQHandler                       0x0800023b   Thumb Code     0  startup_stm32f10x_md.o(.text)
    I2C2_EV_IRQHandler                       0x0800023b   Thumb Code     0  startup_stm32f10x_md.o(.text)
    PVD_IRQHandler                           0x0800023b   Thumb Code     0  startup_stm32f10x_md.o(.text)
    RCC_IRQHandler                           0x0800023b   Thumb Code     0  startup_stm32f10x_md.o(.text)
    RTCAlarm_IRQHandler                      0x0800023b   Thumb Code     0  startup_stm32f10x_md.o(.text)
    RTC_IRQHandler                           0x0800023b   Thumb Code     0  startup_stm32f10x_md.o(.text)
    SPI1_IRQHandler                          0x0800023b   Thumb Code     0  startup_stm32f10x_md.o(.text)
    SPI2_IRQHandler                          0x0800023b   Thumb Code     0  startup_stm32f10x_md.o(.text)
    TAMPER_IRQHandler                        0x0800023b   Thumb Code     0  startup_stm32f10x_md.o(.text)
    TIM1_BRK_IRQHandler                      0x0800023b   Thumb Code     0  startup_stm32f10x_md.o(.text)
    TIM1_CC_IRQHandler                       0x0800023b   Thumb Code     0  startup_stm32f10x_md.o(.text)
    TIM1_TRG_COM_IRQHandler                  0x0800023b   Thumb Code     0  startup_stm32f10x_md.o(.text)
    TIM1_UP_IRQHandler                       0x0800023b   Thumb Code     0  startup_stm32f10x_md.o(.text)
    TIM2_IRQHandler                          0x0800023b   Thumb Code     0  startup_stm32f10x_md.o(.text)
    TIM3_IRQHandler                          0x0800023b   Thumb Code     0  startup_stm32f10x_md.o(.text)
    TIM4_IRQHandler                          0x0800023b   Thumb Code     0  startup_stm32f10x_md.o(.text)
    USART2_IRQHandler                        0x0800023b   Thumb Code     0  startup_stm32f10x_md.o(.text)
    USART3_IRQHandler                        0x0800023b   Thumb Code     0  startup_stm32f10x_md.o(.text)
    USBWakeUp_IRQHandler                     0x0800023b   Thumb Code     0  startup_stm32f10x_md.o(.text)
    USB_HP_CAN1_TX_IRQHandler                0x0800023b   Thumb Code     0  startup_stm32f10x_md.o(.text)
    USB_LP_CAN1_RX0_IRQHandler               0x0800023b   Thumb Code     0  startup_stm32f10x_md.o(.text)
    WWDG_IRQHandler                          0x0800023b   Thumb Code     0  startup_stm32f10x_md.o(.text)
    __user_initial_stackheap                 0x0800023d   Thumb Code     0  startup_stm32f10x_md.o(.text)
    __aeabi_memcpy                           0x08000261   Thumb Code     0  rt_memcpy_v6.o(.text)
    __rt_memcpy                              0x08000261   Thumb Code   138  rt_memcpy_v6.o(.text)
    _memcpy_lastbytes                        0x080002c7   Thumb Code     0  rt_memcpy_v6.o(.text)
    __use_two_region_memory                  0x080002eb   Thumb Code     2  heapauxi.o(.text)
    __rt_heap_escrow$2region                 0x080002ed   Thumb Code     2  heapauxi.o(.text)
    __rt_heap_expand$2region                 0x080002ef   Thumb Code     2  heapauxi.o(.text)
    __aeabi_memcpy4                          0x080002f1   Thumb Code     0  rt_memcpy_w.o(.text)
    __aeabi_memcpy8                          0x080002f1   Thumb Code     0  rt_memcpy_w.o(.text)
    __rt_memcpy_w                            0x080002f1   Thumb Code   100  rt_memcpy_w.o(.text)
    _memcpy_lastbytes_aligned                0x08000339   Thumb Code     0  rt_memcpy_w.o(.text)
    __user_setup_stackheap                   0x08000355   Thumb Code    74  sys_stackheap_outer.o(.text)
    exit                                     0x0800039f   Thumb Code    18  exit.o(.text)
    __user_libspace                          0x080003b1   Thumb Code     8  libspace.o(.text)
    __user_perproc_libspace                  0x080003b1   Thumb Code     0  libspace.o(.text)
    __user_perthread_libspace                0x080003b1   Thumb Code     0  libspace.o(.text)
    _sys_exit                                0x080003b9   Thumb Code     8  sys_exit.o(.text)
    __I$use$semihosting                      0x080003c5   Thumb Code     0  use_no_semi.o(.text)
    __use_no_semihosting_swi                 0x080003c5   Thumb Code     2  use_no_semi.o(.text)
    __semihosting_library_function           0x080003c7   Thumb Code     0  indicate_semi.o(.text)
    IO_ConfigLine                            0x080003c9   Thumb Code   210  io.o(i.IO_ConfigLine)
    IO_Init                                  0x080004a1   Thumb Code    60  io.o(i.IO_Init)
    IO_SetLine                               0x080004e5   Thumb Code    46  io.o(i.IO_SetLine)
    Sender_1                                 0x08000531   Thumb Code   382  main.o(i.Sender_1)
    Stepper_Init                             0x080007d5   Thumb Code   144  stepmotor.o(i.Stepper_Init)
    SysTick_Handler                          0x08000895   Thumb Code    46  port.o(i.SysTick_Handler)
    SystemInit                               0x080008c9   Thumb Code    78  system_stm32f10x.o(i.SystemInit)
    USART1_IRQHandler                        0x08000929   Thumb Code   106  main.o(i.USART1_IRQHandler)
    led_init                                 0x080009ad   Thumb Code    36  led.o(i.led_init)
    main                                     0x080009d9   Thumb Code    86  main.o(i.main)
    pvPortMalloc                             0x08000edd   Thumb Code    98  heap_1.o(i.pvPortMalloc)
    pxPortInitialiseStack                    0x08000f4d   Thumb Code    30  port.o(i.pxPortInitialiseStack)
    rcc_init                                 0x08000f71   Thumb Code   178  main.o(i.rcc_init)
    set_resolution                           0x0800102d   Thumb Code   308  stepmotor.o(i.set_resolution)
    st_Rotate                                0x08001165   Thumb Code    70  stepmotor.o(i.st_Rotate)
    st_Step                                  0x080011b1   Thumb Code    84  stepmotor.o(i.st_Step)
    st_vMotor1                               0x0800120d   Thumb Code    68  stepmotor.o(i.st_vMotor1)
    st_vMotor2                               0x0800125d   Thumb Code    68  stepmotor.o(i.st_vMotor2)
    usart1_init                              0x080012ad   Thumb Code   174  usart.o(i.usart1_init)
    usart_send_data                          0x08001369   Thumb Code    16  usart.o(i.usart_send_data)
    usart_send_string                        0x08001379   Thumb Code    32  usart.o(i.usart_send_string)
    uxListRemove                             0x08001399   Thumb Code    40  list.o(i.uxListRemove)
    vBlinker                                 0x080013c1   Thumb Code    44  main.o(i.vBlinker)
    vListInitialise                          0x080013f1   Thumb Code    26  list.o(i.vListInitialise)
    vListInitialiseItem                      0x0800140b   Thumb Code     6  list.o(i.vListInitialiseItem)
    vListInsert                              0x08001411   Thumb Code    52  list.o(i.vListInsert)
    vListInsertEnd                           0x08001445   Thumb Code    24  list.o(i.vListInsertEnd)
    vPortEnterCritical                       0x0800145d   Thumb Code    30  port.o(i.vPortEnterCritical)
    vPortExitCritical                        0x08001481   Thumb Code    28  port.o(i.vPortExitCritical)
    vPortFree                                0x080014a1   Thumb Code     2  heap_1.o(i.vPortFree)
    vPortSetupTimerInterrupt                 0x080014a5   Thumb Code    14  port.o(i.vPortSetupTimerInterrupt)
    vTaskDelay                               0x080014b9   Thumb Code    46  tasks.o(i.vTaskDelay)
    vTaskMissedYield                         0x080014ed   Thumb Code     8  tasks.o(i.vTaskMissedYield)
    vTaskPlaceOnEventList                    0x080014f9   Thumb Code    28  tasks.o(i.vTaskPlaceOnEventList)
    vTaskSetTimeOutState                     0x08001519   Thumb Code    14  tasks.o(i.vTaskSetTimeOutState)
    vTaskStartScheduler                      0x08001531   Thumb Code    72  tasks.o(i.vTaskStartScheduler)
    vTaskSuspendAll                          0x08001595   Thumb Code    12  tasks.o(i.vTaskSuspendAll)
    vTaskSwitchContext                       0x080015a5   Thumb Code    76  tasks.o(i.vTaskSwitchContext)
    xPortStartScheduler                      0x08001605   Thumb Code    42  port.o(i.xPortStartScheduler)
    xQueueGenericCreate                      0x08001639   Thumb Code    56  queue.o(i.xQueueGenericCreate)
    xQueueGenericReceive                     0x08001671   Thumb Code   312  queue.o(i.xQueueGenericReceive)
    xQueueGenericReset                       0x080017ad   Thumb Code   122  queue.o(i.xQueueGenericReset)
    xQueueGenericSend                        0x0800182d   Thumb Code   276  queue.o(i.xQueueGenericSend)
    xQueueGiveFromISR                        0x08001945   Thumb Code   120  queue.o(i.xQueueGiveFromISR)
    xTaskCheckForTimeOut                     0x080019bd   Thumb Code    84  tasks.o(i.xTaskCheckForTimeOut)
    xTaskCreate                              0x08001a19   Thumb Code    96  tasks.o(i.xTaskCreate)
    xTaskIncrementTick                       0x08001a79   Thumb Code   238  tasks.o(i.xTaskIncrementTick)
    xTaskRemoveFromEventList                 0x08001b95   Thumb Code   104  tasks.o(i.xTaskRemoveFromEventList)
    xTaskResumeAll                           0x08001c15   Thumb Code   196  tasks.o(i.xTaskResumeAll)
    IOs                                      0x08001cfc   Data          96  io.o(.constdata)
    Region$$Table$$Base                      0x08001d5c   Number         0  anon$$obj.o(Region$$Table)
    Region$$Table$$Limit                     0x08001d7c   Number         0  anon$$obj.o(Region$$Table)
    qMotor1                                  0x20000000   Data           4  main.o(.data)
    qMotor2                                  0x20000004   Data           4  main.o(.data)
    StopMotor1                               0x20000008   Data           4  main.o(.data)
    StopMotor2                               0x2000000c   Data           4  main.o(.data)
    OK_Motor1                                0x20000010   Data           4  main.o(.data)
    OK_Motor2                                0x20000014   Data           4  main.o(.data)
    ISRFromUSARTHandle                       0x20000018   Data           4  main.o(.data)
    rx_index                                 0x2000001c   Data           1  main.o(.data)
    x                                        0x2000001d   Data           1  main.o(.data)
    Motor                                    0x20000024   Data          12  stepmotor.o(.data)
    pxCurrentTCB                             0x2000003c   Data           4  tasks.o(.data)
    buffer_rx                                0x20000078   Data           9  main.o(.bss)
    __libspace_start                         0x2000454c   Data          96  libspace.o(.bss)
    __temporary_stack_top$libspace           0x200045ac   Data           0  libspace.o(.bss)



==============================================================================

Memory Map of the image

  Image Entry point : 0x08000221

  Load Region LR_1 (Base: 0x08000000, Size: 0x00001df4, Max: 0xffffffff, ABSOLUTE)

    Execution Region ER_RO (Exec base: 0x08000000, Load base: 0x08000000, Size: 0x00001d7c, Max: 0xffffffff, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x08000000   0x08000000   0x000000ec   Data   RO          303    RESET               startup_stm32f10x_md.o
    0x080000ec   0x080000ec   0x00000008   Code   RO          966  * !!!main             c_w.l(__main.o)
    0x080000f4   0x080000f4   0x00000034   Code   RO         1125    !!!scatter          c_w.l(__scatter.o)
    0x08000128   0x08000128   0x0000001a   Code   RO         1127    !!handler_copy      c_w.l(__scatter_copy.o)
    0x08000142   0x08000142   0x00000002   PAD
    0x08000144   0x08000144   0x0000001c   Code   RO         1129    !!handler_zi        c_w.l(__scatter_zi.o)
    0x08000160   0x08000160   0x00000002   Code   RO          995    .ARM.Collect$$libinit$$00000000  c_w.l(libinit.o)
    0x08000162   0x08000162   0x00000000   Code   RO         1002    .ARM.Collect$$libinit$$00000002  c_w.l(libinit2.o)
    0x08000162   0x08000162   0x00000000   Code   RO         1004    .ARM.Collect$$libinit$$00000004  c_w.l(libinit2.o)
    0x08000162   0x08000162   0x00000000   Code   RO         1007    .ARM.Collect$$libinit$$0000000A  c_w.l(libinit2.o)
    0x08000162   0x08000162   0x00000000   Code   RO         1009    .ARM.Collect$$libinit$$0000000C  c_w.l(libinit2.o)
    0x08000162   0x08000162   0x00000000   Code   RO         1011    .ARM.Collect$$libinit$$0000000E  c_w.l(libinit2.o)
    0x08000162   0x08000162   0x00000000   Code   RO         1014    .ARM.Collect$$libinit$$00000011  c_w.l(libinit2.o)
    0x08000162   0x08000162   0x00000000   Code   RO         1016    .ARM.Collect$$libinit$$00000013  c_w.l(libinit2.o)
    0x08000162   0x08000162   0x00000000   Code   RO         1018    .ARM.Collect$$libinit$$00000015  c_w.l(libinit2.o)
    0x08000162   0x08000162   0x00000000   Code   RO         1020    .ARM.Collect$$libinit$$00000017  c_w.l(libinit2.o)
    0x08000162   0x08000162   0x00000000   Code   RO         1022    .ARM.Collect$$libinit$$00000019  c_w.l(libinit2.o)
    0x08000162   0x08000162   0x00000000   Code   RO         1024    .ARM.Collect$$libinit$$0000001B  c_w.l(libinit2.o)
    0x08000162   0x08000162   0x00000000   Code   RO         1026    .ARM.Collect$$libinit$$0000001D  c_w.l(libinit2.o)
    0x08000162   0x08000162   0x00000000   Code   RO         1028    .ARM.Collect$$libinit$$0000001F  c_w.l(libinit2.o)
    0x08000162   0x08000162   0x00000000   Code   RO         1030    .ARM.Collect$$libinit$$00000021  c_w.l(libinit2.o)
    0x08000162   0x08000162   0x00000000   Code   RO         1032    .ARM.Collect$$libinit$$00000023  c_w.l(libinit2.o)
    0x08000162   0x08000162   0x00000000   Code   RO         1034    .ARM.Collect$$libinit$$00000025  c_w.l(libinit2.o)
    0x08000162   0x08000162   0x00000000   Code   RO         1038    .ARM.Collect$$libinit$$0000002C  c_w.l(libinit2.o)
    0x08000162   0x08000162   0x00000000   Code   RO         1040    .ARM.Collect$$libinit$$0000002E  c_w.l(libinit2.o)
    0x08000162   0x08000162   0x00000000   Code   RO         1042    .ARM.Collect$$libinit$$00000030  c_w.l(libinit2.o)
    0x08000162   0x08000162   0x00000000   Code   RO         1044    .ARM.Collect$$libinit$$00000032  c_w.l(libinit2.o)
    0x08000162   0x08000162   0x00000002   Code   RO         1045    .ARM.Collect$$libinit$$00000033  c_w.l(libinit2.o)
    0x08000164   0x08000164   0x00000002   Code   RO         1065    .ARM.Collect$$libshutdown$$00000000  c_w.l(libshutdown.o)
    0x08000166   0x08000166   0x00000000   Code   RO         1078    .ARM.Collect$$libshutdown$$00000002  c_w.l(libshutdown2.o)
    0x08000166   0x08000166   0x00000000   Code   RO         1080    .ARM.Collect$$libshutdown$$00000004  c_w.l(libshutdown2.o)
    0x08000166   0x08000166   0x00000000   Code   RO         1083    .ARM.Collect$$libshutdown$$00000007  c_w.l(libshutdown2.o)
    0x08000166   0x08000166   0x00000000   Code   RO         1086    .ARM.Collect$$libshutdown$$0000000A  c_w.l(libshutdown2.o)
    0x08000166   0x08000166   0x00000000   Code   RO         1088    .ARM.Collect$$libshutdown$$0000000C  c_w.l(libshutdown2.o)
    0x08000166   0x08000166   0x00000000   Code   RO         1091    .ARM.Collect$$libshutdown$$0000000F  c_w.l(libshutdown2.o)
    0x08000166   0x08000166   0x00000002   Code   RO         1092    .ARM.Collect$$libshutdown$$00000010  c_w.l(libshutdown2.o)
    0x08000168   0x08000168   0x00000000   Code   RO          968    .ARM.Collect$$rtentry$$00000000  c_w.l(__rtentry.o)
    0x08000168   0x08000168   0x00000000   Code   RO          972    .ARM.Collect$$rtentry$$00000002  c_w.l(__rtentry2.o)
    0x08000168   0x08000168   0x00000006   Code   RO          984    .ARM.Collect$$rtentry$$00000004  c_w.l(__rtentry4.o)
    0x0800016e   0x0800016e   0x00000000   Code   RO          974    .ARM.Collect$$rtentry$$00000009  c_w.l(__rtentry2.o)
    0x0800016e   0x0800016e   0x00000004   Code   RO          975    .ARM.Collect$$rtentry$$0000000A  c_w.l(__rtentry2.o)
    0x08000172   0x08000172   0x00000000   Code   RO          977    .ARM.Collect$$rtentry$$0000000C  c_w.l(__rtentry2.o)
    0x08000172   0x08000172   0x00000008   Code   RO          978    .ARM.Collect$$rtentry$$0000000D  c_w.l(__rtentry2.o)
    0x0800017a   0x0800017a   0x00000002   Code   RO          999    .ARM.Collect$$rtexit$$00000000  c_w.l(rtexit.o)
    0x0800017c   0x0800017c   0x00000000   Code   RO         1047    .ARM.Collect$$rtexit$$00000002  c_w.l(rtexit2.o)
    0x0800017c   0x0800017c   0x00000004   Code   RO         1048    .ARM.Collect$$rtexit$$00000003  c_w.l(rtexit2.o)
    0x08000180   0x08000180   0x00000006   Code   RO         1049    .ARM.Collect$$rtexit$$00000004  c_w.l(rtexit2.o)
    0x08000186   0x08000186   0x00000002   PAD
    0x08000188   0x08000188   0x00000096   Code   RO          484    .emb_text           port.o
    0x0800021e   0x0800021e   0x00000002   PAD
    0x08000220   0x08000220   0x00000040   Code   RO          304  * .text               startup_stm32f10x_md.o
    0x08000260   0x08000260   0x0000008a   Code   RO          962    .text               c_w.l(rt_memcpy_v6.o)
    0x080002ea   0x080002ea   0x00000006   Code   RO          964    .text               c_w.l(heapauxi.o)
    0x080002f0   0x080002f0   0x00000064   Code   RO          969    .text               c_w.l(rt_memcpy_w.o)
    0x08000354   0x08000354   0x0000004a   Code   RO          986    .text               c_w.l(sys_stackheap_outer.o)
    0x0800039e   0x0800039e   0x00000012   Code   RO          988    .text               c_w.l(exit.o)
    0x080003b0   0x080003b0   0x00000008   Code   RO          996    .text               c_w.l(libspace.o)
    0x080003b8   0x080003b8   0x0000000c   Code   RO         1057    .text               c_w.l(sys_exit.o)
    0x080003c4   0x080003c4   0x00000002   Code   RO         1068    .text               c_w.l(use_no_semi.o)
    0x080003c6   0x080003c6   0x00000000   Code   RO         1070    .text               c_w.l(indicate_semi.o)
    0x080003c6   0x080003c6   0x00000002   PAD
    0x080003c8   0x080003c8   0x000000d8   Code   RO          229    i.IO_ConfigLine     io.o
    0x080004a0   0x080004a0   0x00000044   Code   RO          230    i.IO_Init           io.o
    0x080004e4   0x080004e4   0x00000034   Code   RO          231    i.IO_SetLine        io.o
    0x08000518   0x08000518   0x00000016   Code   RO          132    i.NVIC_EnableIRQ    usart.o
    0x0800052e   0x0800052e   0x00000002   PAD
    0x08000530   0x08000530   0x000001bc   Code   RO           33    i.Sender_1          main.o
    0x080006ec   0x080006ec   0x00000008   Code   RO          267    i.SetSysClock       system_stm32f10x.o
    0x080006f4   0x080006f4   0x000000e0   Code   RO          268    i.SetSysClockTo72   system_stm32f10x.o
    0x080007d4   0x080007d4   0x000000c0   Code   RO          180    i.Stepper_Init      stepmotor.o
    0x08000894   0x08000894   0x00000034   Code   RO          485    i.SysTick_Handler   port.o
    0x080008c8   0x080008c8   0x00000060   Code   RO          270    i.SystemInit        system_stm32f10x.o
    0x08000928   0x08000928   0x00000084   Code   RO           34    i.USART1_IRQHandler  main.o
    0x080009ac   0x080009ac   0x0000002c   Code   RO            1    i.led_init          led.o
    0x080009d8   0x080009d8   0x00000074   Code   RO           35    i.main              main.o
    0x08000a4c   0x08000a4c   0x00000098   Code   RO          679    i.prvAddCurrentTaskToDelayedList  tasks.o
    0x08000ae4   0x08000ae4   0x000000b4   Code   RO          680    i.prvAddNewTaskToReadyList  tasks.o
    0x08000b98   0x08000b98   0x00000064   Code   RO          681    i.prvCheckTasksWaitingTermination  tasks.o
    0x08000bfc   0x08000bfc   0x0000002a   Code   RO          555    i.prvCopyDataFromQueue  queue.o
    0x08000c26   0x08000c26   0x0000006a   Code   RO          556    i.prvCopyDataToQueue  queue.o
    0x08000c90   0x08000c90   0x00000012   Code   RO          682    i.prvDeleteTCB      tasks.o
    0x08000ca2   0x08000ca2   0x00000002   PAD
    0x08000ca4   0x08000ca4   0x00000028   Code   RO          683    i.prvIdleTask       tasks.o
    0x08000ccc   0x08000ccc   0x00000026   Code   RO          557    i.prvInitialiseNewQueue  queue.o
    0x08000cf2   0x08000cf2   0x00000080   Code   RO          684    i.prvInitialiseNewTask  tasks.o
    0x08000d72   0x08000d72   0x00000002   PAD
    0x08000d74   0x08000d74   0x00000068   Code   RO          685    i.prvInitialiseTaskLists  tasks.o
    0x08000ddc   0x08000ddc   0x0000001a   Code   RO          558    i.prvIsQueueEmpty   queue.o
    0x08000df6   0x08000df6   0x0000001e   Code   RO          559    i.prvIsQueueFull    queue.o
    0x08000e14   0x08000e14   0x00000034   Code   RO          686    i.prvResetNextTaskUnblockTime  tasks.o
    0x08000e48   0x08000e48   0x00000016   Code   RO          486    i.prvTaskExitError  port.o
    0x08000e5e   0x08000e5e   0x0000007e   Code   RO          560    i.prvUnlockQueue    queue.o
    0x08000edc   0x08000edc   0x00000070   Code   RO          415    i.pvPortMalloc      heap_1.o
    0x08000f4c   0x08000f4c   0x00000024   Code   RO          487    i.pxPortInitialiseStack  port.o
    0x08000f70   0x08000f70   0x000000bc   Code   RO           36    i.rcc_init          main.o
    0x0800102c   0x0800102c   0x00000138   Code   RO          181    i.set_resolution    stepmotor.o
    0x08001164   0x08001164   0x0000004c   Code   RO          182    i.st_Rotate         stepmotor.o
    0x080011b0   0x080011b0   0x0000005c   Code   RO          183    i.st_Step           stepmotor.o
    0x0800120c   0x0800120c   0x00000050   Code   RO          184    i.st_vMotor1        stepmotor.o
    0x0800125c   0x0800125c   0x00000050   Code   RO          185    i.st_vMotor2        stepmotor.o
    0x080012ac   0x080012ac   0x000000bc   Code   RO          133    i.usart1_init       usart.o
    0x08001368   0x08001368   0x00000010   Code   RO          136    i.usart_send_data   usart.o
    0x08001378   0x08001378   0x00000020   Code   RO          137    i.usart_send_string  usart.o
    0x08001398   0x08001398   0x00000028   Code   RO          448    i.uxListRemove      list.o
    0x080013c0   0x080013c0   0x00000030   Code   RO           37    i.vBlinker          main.o
    0x080013f0   0x080013f0   0x0000001a   Code   RO          449    i.vListInitialise   list.o
    0x0800140a   0x0800140a   0x00000006   Code   RO          450    i.vListInitialiseItem  list.o
    0x08001410   0x08001410   0x00000034   Code   RO          451    i.vListInsert       list.o
    0x08001444   0x08001444   0x00000018   Code   RO          452    i.vListInsertEnd    list.o
    0x0800145c   0x0800145c   0x00000024   Code   RO          489    i.vPortEnterCritical  port.o
    0x08001480   0x08001480   0x00000020   Code   RO          490    i.vPortExitCritical  port.o
    0x080014a0   0x080014a0   0x00000002   Code   RO          416    i.vPortFree         heap_1.o
    0x080014a2   0x080014a2   0x00000002   PAD
    0x080014a4   0x080014a4   0x00000014   Code   RO          491    i.vPortSetupTimerInterrupt  port.o
    0x080014b8   0x080014b8   0x00000034   Code   RO          693    i.vTaskDelay        tasks.o
    0x080014ec   0x080014ec   0x0000000c   Code   RO          697    i.vTaskMissedYield  tasks.o
    0x080014f8   0x080014f8   0x00000020   Code   RO          699    i.vTaskPlaceOnEventList  tasks.o
    0x08001518   0x08001518   0x00000018   Code   RO          703    i.vTaskSetTimeOutState  tasks.o
    0x08001530   0x08001530   0x00000064   Code   RO          704    i.vTaskStartScheduler  tasks.o
    0x08001594   0x08001594   0x00000010   Code   RO          706    i.vTaskSuspendAll   tasks.o
    0x080015a4   0x080015a4   0x00000060   Code   RO          707    i.vTaskSwitchContext  tasks.o
    0x08001604   0x08001604   0x00000034   Code   RO          492    i.xPortStartScheduler  port.o
    0x08001638   0x08001638   0x00000038   Code   RO          565    i.xQueueGenericCreate  queue.o
    0x08001670   0x08001670   0x0000013c   Code   RO          566    i.xQueueGenericReceive  queue.o
    0x080017ac   0x080017ac   0x00000080   Code   RO          567    i.xQueueGenericReset  queue.o
    0x0800182c   0x0800182c   0x00000118   Code   RO          568    i.xQueueGenericSend  queue.o
    0x08001944   0x08001944   0x00000078   Code   RO          570    i.xQueueGiveFromISR  queue.o
    0x080019bc   0x080019bc   0x0000005c   Code   RO          708    i.xTaskCheckForTimeOut  tasks.o
    0x08001a18   0x08001a18   0x00000060   Code   RO          709    i.xTaskCreate       tasks.o
    0x08001a78   0x08001a78   0x0000011c   Code   RO          714    i.xTaskIncrementTick  tasks.o
    0x08001b94   0x08001b94   0x00000080   Code   RO          717    i.xTaskRemoveFromEventList  tasks.o
    0x08001c14   0x08001c14   0x000000e8   Code   RO          719    i.xTaskResumeAll    tasks.o
    0x08001cfc   0x08001cfc   0x00000060   Data   RO          232    .constdata          io.o
    0x08001d5c   0x08001d5c   0x00000020   Data   RO         1123    Region$$Table       anon$$obj.o


    Execution Region ER_RW (Exec base: 0x20000000, Load base: 0x08001d7c, Size: 0x00000078, Max: 0xffffffff, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x20000000   0x08001d7c   0x00000024   Data   RW           39    .data               main.o
    0x20000024   0x08001da0   0x0000000c   Data   RW          186    .data               stepmotor.o
    0x20000030   0x08001dac   0x00000008   Data   RW          420    .data               heap_1.o
    0x20000038   0x08001db4   0x00000004   Data   RW          493    .data               port.o
    0x2000003c   0x08001db8   0x0000003c   Data   RW          722    .data               tasks.o


    Execution Region ER_ZI (Exec base: 0x20000078, Load base: 0x08001df4, Size: 0x00004b38, Max: 0xffffffff, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x20000078        -       0x00000009   Zero   RW           38    .bss                main.o
    0x20000081        -       0x00004400   Zero   RW          419    .bss                heap_1.o
    0x20004481   0x08001df4   0x00000003   PAD
    0x20004484        -       0x000000c8   Zero   RW          721    .bss                tasks.o
    0x2000454c        -       0x00000060   Zero   RW          997    .bss                c_w.l(libspace.o)
    0x200045ac   0x08001df4   0x00000004   PAD
    0x200045b0        -       0x00000200   Zero   RW          302    HEAP                startup_stm32f10x_md.o
    0x200047b0        -       0x00000400   Zero   RW          301    STACK               startup_stm32f10x_md.o


==============================================================================

Image component sizes


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Object Name

         0          0          0          0          0         32   core_cm3.o
         0          0          0          0          0       9256   event_groups.o
       114         14          0          8      17408       1815   heap_1.o
       336         20         96          0          0       2069   io.o
        44          8          0          0          0     206579   led.o
       148          0          0          0          0       3002   list.o
       928        132          0         36          9      16544   main.o
       400         50          0          4          0       8588   port.o
      1268         14          0          0          0       9990   queue.o
        64         26        236          0       1536        796   startup_stm32f10x_md.o
       832         96          0         12          0       5000   stepmotor.o
       328         28          0          0          0       1857   system_stm32f10x.o
      1938        314          0         60        200      23849   tasks.o
       258         14          0          0          0      17407   usart.o

    ----------------------------------------------------------------------
      6668        716        364        120      19156     306784   Object Totals
         0          0         32          0          0          0   (incl. Generated)
        10          0          0          0          3          0   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Member Name

         8          0          0          0          0         68   __main.o
         0          0          0          0          0          0   __rtentry.o
        12          0          0          0          0          0   __rtentry2.o
         6          0          0          0          0          0   __rtentry4.o
        52          8          0          0          0          0   __scatter.o
        26          0          0          0          0          0   __scatter_copy.o
        28          0          0          0          0          0   __scatter_zi.o
        18          0          0          0          0         80   exit.o
         6          0          0          0          0        152   heapauxi.o
         0          0          0          0          0          0   indicate_semi.o
         2          0          0          0          0          0   libinit.o
         2          0          0          0          0          0   libinit2.o
         2          0          0          0          0          0   libshutdown.o
         2          0          0          0          0          0   libshutdown2.o
         8          4          0          0         96         68   libspace.o
       138          0          0          0          0         68   rt_memcpy_v6.o
       100          0          0          0          0         80   rt_memcpy_w.o
         2          0          0          0          0          0   rtexit.o
        10          0          0          0          0          0   rtexit2.o
        12          4          0          0          0         68   sys_exit.o
        74          0          0          0          0         80   sys_stackheap_outer.o
         2          0          0          0          0         68   use_no_semi.o

    ----------------------------------------------------------------------
       516         16          0          0        100        732   Library Totals
         6          0          0          0          4          0   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Name

       510         16          0          0         96        732   c_w.l

    ----------------------------------------------------------------------
       516         16          0          0        100        732   Library Totals

    ----------------------------------------------------------------------

==============================================================================


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   

      7184        732        364        120      19256     303924   Grand Totals
      7184        732        364        120      19256     303924   ELF Image Totals
      7184        732        364        120          0          0   ROM Totals

==============================================================================

    Total RO  Size (Code + RO Data)                 7548 (   7.37kB)
    Total RW  Size (RW Data + ZI Data)             19376 (  18.92kB)
    Total ROM Size (Code + RO Data + RW Data)       7668 (   7.49kB)

==============================================================================

